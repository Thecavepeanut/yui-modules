{"majorversion": 3, "filemap": {"Context2d.js": {"classlist": ["Canvas.Context2d"], "name": "Context2d.js", "module": "gallery-canvas"}}, "modules": {"gallery-canvas": {"description": "<p>Wrapper for a canvas 2d context.  It exposes the exact same api as\nthe native 2d context, plus some extras, documented below.  Just like\nY.Node, use get() and set() to modify attributes.</p>", "submodules": [], "classlist": ["Canvas.Context2d"], "filelist": ["Context2d.js"], "subdata": {}, "name": "gallery-canvas"}}, "classmap": {"Canvas.Context2d": {"name": "Canvas.Context2d", "constructors": [{"params": [{"type": "Y.Node", "name": "node", "description": "  the canvas element"}, {"type": "Object", "name": "config", "description": "  configuration\n<dl>\n<dt>pixelAlign<dt>\n<dd>Optional. Default: true. Pass true to get thinner, cleaner strokes.\nPass false to get the default rendering.</dd>\n</dl>"}], "description": "<p>Wrapper for a canvas 2d context.  It exposes the exact same api as\nthe native 2d context, plus some extras, documented below.  Just like\nY.Node, use get() and set() to modify attributes.</p>"}], "namespace": "Canvas", "module": "gallery-canvas", "methods": {"roundedRect": {"params": [{"type": "int", "name": "top", "description": ""}, {"type": "int", "name": "left", "description": ""}, {"type": "int", "name": "bottom", "description": ""}, {"type": "int", "name": "right", "description": ""}, {"type": "int", "name": "radius", "description": "  radius of rounded corners"}], "description": "Define a rectangle with rounded corners.  You must call stroke(),\nfill(), etc. afterwards.", "guessedname": "roundedRect", "guessedtype": "function"}, "set": {"params": [{"type": "String", "name": "name", "description": "  the attribute name"}, {"type": "Mixed", "name": "value", "description": "  the attribute value"}], "description": "Set an attribute.  This accepts all attributes of the context and\nthe special name \"pixelAlign\".", "guessedname": "set", "guessedtype": "function"}, "get": {"return": {"type": "Mixed", "description": "the attribute value"}, "params": [{"type": "String", "name": "name", "description": "  the attribute name"}], "description": "Get an attribute.  This accepts all attributes of the context and\nthe special name \"pixelAlign\".", "guessedname": "get", "guessedtype": "function"}, "move": {"params": [{"type": "int", "name": "dx", "description": ""}, {"type": "int", "name": "dy", "description": ""}], "description": "Move relative to the current pen location (set via moveTo or move).\nThis only works when the transformation matrix is constant!", "guessedname": "move", "guessedtype": "function"}, "poly": {"params": [{"type": "Array", "name": "list", "description": "  List of deltas (dx,dy).  You can omit values that are zero."}], "description": "Draw a polygon from a set of deltas.", "guessedname": "poly", "guessedtype": "function"}, "line": {"params": [{"type": "int", "name": "dx", "description": ""}, {"type": "int", "name": "dy", "description": ""}], "description": "Move relative to the current pen location.\nThis only works when the transformation matrix is constant!", "guessedname": "line", "guessedtype": "function"}}, "file": "Context2d.js", "shortname": "Context2d", "description": "<p>Wrapper for a canvas 2d context.  It exposes the exact same api as\nthe native 2d context, plus some extras, documented below.  Just like\nY.Node, use get() and set() to modify attributes.</p>"}}, "version": "1.0.0", "namespaces": ["Canvas"]}