{
    "name": "FWTreeView Test Suite",
    "passed": 7,
    "failed": 0,
    "errors": 0,
    "ignored": 0,
    "total": 7,
    "duration": 1930,
    "type": "report",
    "FlyweightTree": {
        "name": "FlyweightTree",
        "passed": 7,
        "failed": 0,
        "errors": 0,
        "ignored": 0,
        "total": 7,
        "duration": 1927,
        "type": "testcase",
        "test node pools": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "test node pools",
            "duration": 1665
        },
        "Test dynamic Loading": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Test dynamic Loading",
            "duration": 36
        },
        "Test focused node gets expanded": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Test focused node gets expanded",
            "duration": 82
        },
        "Requesting a held node should return the same reference": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Requesting a held node should return the same reference",
            "duration": 6
        },
        "is depth correct": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "is depth correct",
            "duration": 52
        },
        "Does hold end release work?": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Does hold end release work?",
            "duration": 6
        },
        "Test multiple types": {
            "result": "pass",
            "message": "Test passed",
            "type": "test",
            "name": "Test multiple types",
            "duration": 5
        }
    },
    "timestamp": "Wed 05 Dec 2012 03:02:53 PM CST",
    "coverage": {
        "build/cdn_gallery-2012.12.05-21-01/": {
            "path": "build/cdn_gallery-2012.12.05-21-01/",
            "s": {
                "1": 1,
                "2": 1,
                "3": 1,
                "4": 9,
                "5": 1,
                "6": 9,
                "7": 9,
                "8": 9,
                "9": 0,
                "10": 9,
                "11": 9,
                "12": 8,
                "13": 9,
                "14": 9,
                "15": 9,
                "16": 3199,
                "17": 3199,
                "18": 3186,
                "19": 22,
                "20": 22,
                "21": 3186,
                "22": 9,
                "23": 3186,
                "24": 3186,
                "25": 3186,
                "26": 15,
                "27": 3171,
                "28": 3186,
                "29": 8,
                "30": 8,
                "31": 8,
                "32": 8,
                "33": 8,
                "34": 8,
                "35": 0,
                "36": 0,
                "37": 58,
                "38": 58,
                "39": 2,
                "40": 2,
                "41": 2,
                "42": 2,
                "43": 56,
                "44": 1,
                "45": 1364,
                "46": 340,
                "47": 1,
                "48": 340,
                "49": 2,
                "50": 11,
                "51": 11,
                "52": 0,
                "53": 11,
                "54": 11,
                "55": 684,
                "56": 0,
                "57": 11,
                "58": 684,
                "59": 11,
                "60": 11,
                "61": 11,
                "62": 673,
                "63": 11,
                "64": 0,
                "65": 0,
                "66": 0,
                "67": 10153,
                "68": 10153,
                "69": 10128,
                "70": 25,
                "71": 10,
                "72": 25,
                "73": 25,
                "74": 0,
                "75": 25,
                "76": 5069,
                "77": 5069,
                "78": 5031,
                "79": 5031,
                "80": 10,
                "81": 5031,
                "82": 4988,
                "83": 4988,
                "84": 43,
                "85": 5069,
                "86": 5069,
                "87": 5079,
                "88": 5079,
                "89": 5079,
                "90": 62,
                "91": 5017,
                "92": 5017,
                "93": 5017,
                "94": 5017,
                "95": 5017,
                "96": 43,
                "97": 43,
                "98": 42,
                "99": 43,
                "100": 43,
                "101": 43,
                "102": 43,
                "103": 43,
                "104": 43,
                "105": 43,
                "106": 43,
                "107": 0,
                "108": 24,
                "109": 2,
                "110": 224,
                "111": 2,
                "112": 2,
                "113": 222,
                "114": 58,
                "115": 164,
                "116": 2,
                "117": 2,
                "118": 0,
                "119": 2,
                "120": 2,
                "121": 2,
                "122": 0,
                "123": 10,
                "124": 10,
                "125": 4563,
                "126": 4553,
                "127": 0,
                "128": 4553,
                "129": 10,
                "130": 16,
                "131": 16,
                "132": 1778,
                "133": 1773,
                "134": 11,
                "135": 1762,
                "136": 16,
                "137": 16,
                "138": 3,
                "139": 2,
                "140": 2,
                "141": 2,
                "142": 2,
                "143": 0,
                "144": 2,
                "145": 5,
                "146": 5,
                "147": 3,
                "148": 3,
                "149": 2,
                "150": 2,
                "151": 2,
                "152": 2,
                "153": 2,
                "154": 2,
                "155": 2,
                "156": 2,
                "157": 2,
                "158": 9,
                "159": 0,
                "160": 9,
                "161": 1,
                "162": 3,
                "163": 3,
                "164": 9,
                "165": 1,
                "166": 1,
                "167": 43,
                "168": 43,
                "169": 43,
                "170": 43,
                "171": 43,
                "172": 43,
                "173": 89,
                "174": 89,
                "175": 89,
                "176": 43,
                "177": 43,
                "178": 43,
                "179": 2852,
                "180": 2852,
                "181": 2852,
                "182": 2852,
                "183": 2852,
                "184": 736,
                "185": 384,
                "186": 384,
                "187": 1449,
                "188": 384,
                "189": 352,
                "190": 2116,
                "191": 15,
                "192": 2101,
                "193": 2852,
                "194": 738,
                "195": 2852,
                "196": 738,
                "197": 2852,
                "198": 5,
                "199": 2852,
                "200": 2852,
                "201": 2852,
                "202": 2852,
                "203": 5074,
                "204": 5074,
                "205": 5074,
                "206": 1017,
                "207": 1017,
                "208": 2516,
                "209": 2516,
                "210": 2516,
                "211": 1214,
                "212": 4625,
                "213": 4625,
                "214": 4625,
                "215": 4625,
                "216": 0,
                "217": 0,
                "218": 0,
                "219": 3802,
                "220": 349,
                "221": 349,
                "222": 349,
                "223": 4,
                "224": 4,
                "225": 345,
                "226": 345,
                "227": 345,
                "228": 343,
                "229": 342,
                "230": 343,
                "231": 2,
                "232": 345,
                "233": 4,
                "234": 4,
                "235": 4,
                "236": 4,
                "237": 4,
                "238": 4,
                "239": 4,
                "240": 4,
                "241": 0,
                "242": 4,
                "243": 354,
                "244": 354,
                "245": 354,
                "246": 1403,
                "247": 354,
                "248": 354,
                "249": 46,
                "250": 46,
                "251": 46,
                "252": 107,
                "253": 107,
                "254": 107,
                "255": 8,
                "256": 8,
                "257": 2,
                "258": 2,
                "259": 1,
                "260": 1,
                "261": 2,
                "262": 2,
                "263": 1,
                "264": 1,
                "265": 0,
                "266": 0,
                "267": 0,
                "268": 4,
                "269": 0,
                "270": 0,
                "271": 27325,
                "272": 27325,
                "273": 6358,
                "274": 20967,
                "275": 12323,
                "276": 8644,
                "277": 521,
                "278": 521,
                "279": 172,
                "280": 349,
                "281": 2852,
                "282": 0,
                "283": 3334,
                "284": 3334,
                "285": 14935,
                "286": 14935,
                "287": 3334,
                "288": 1
            },
            "b": {
                "1": [
                    22,
                    3164
                ],
                "2": [
                    9,
                    3177
                ],
                "3": [
                    3186,
                    3186
                ],
                "4": [
                    15,
                    3171
                ],
                "5": [
                    3186,
                    15
                ],
                "6": [
                    3171,
                    1705
                ],
                "7": [
                    0,
                    8
                ],
                "8": [
                    2,
                    56
                ],
                "9": [
                    58,
                    49
                ],
                "10": [
                    340,
                    1024
                ],
                "11": [
                    1364,
                    340
                ],
                "12": [
                    2,
                    338
                ],
                "13": [
                    340,
                    84
                ],
                "14": [
                    0,
                    11
                ],
                "15": [
                    11,
                    0
                ],
                "16": [
                    11,
                    673
                ],
                "17": [
                    0,
                    0
                ],
                "18": [
                    10128,
                    25
                ],
                "19": [
                    10,
                    15
                ],
                "20": [
                    0,
                    25
                ],
                "21": [
                    5031,
                    38
                ],
                "22": [
                    10,
                    5021
                ],
                "23": [
                    4988,
                    43
                ],
                "24": [
                    5069,
                    5031
                ],
                "25": [
                    62,
                    5017
                ],
                "26": [
                    5017,
                    0
                ],
                "27": [
                    43,
                    40
                ],
                "28": [
                    42,
                    1
                ],
                "29": [
                    43,
                    0
                ],
                "30": [
                    43,
                    0
                ],
                "31": [
                    2,
                    222
                ],
                "32": [
                    58,
                    164
                ],
                "33": [
                    2,
                    0
                ],
                "34": [
                    2,
                    0
                ],
                "35": [
                    10,
                    10
                ],
                "36": [
                    4563,
                    3395
                ],
                "37": [
                    0,
                    4553
                ],
                "38": [
                    16,
                    16
                ],
                "39": [
                    11,
                    1762
                ],
                "40": [
                    2,
                    0
                ],
                "41": [
                    2,
                    2
                ],
                "42": [
                    2,
                    0
                ],
                "43": [
                    3,
                    2
                ],
                "44": [
                    5,
                    5
                ],
                "45": [
                    2,
                    0
                ],
                "46": [
                    2,
                    2
                ],
                "47": [
                    0,
                    9
                ],
                "48": [
                    9,
                    8
                ],
                "49": [
                    1,
                    8
                ],
                "50": [
                    3,
                    0
                ],
                "51": [
                    89,
                    45
                ],
                "52": [
                    89,
                    45
                ],
                "53": [
                    2852,
                    736
                ],
                "54": [
                    2852,
                    2852
                ],
                "55": [
                    2852,
                    2852
                ],
                "56": [
                    736,
                    2116
                ],
                "57": [
                    384,
                    352
                ],
                "58": [
                    15,
                    2101
                ],
                "59": [
                    2116,
                    15
                ],
                "60": [
                    738,
                    2114
                ],
                "61": [
                    738,
                    2114
                ],
                "62": [
                    5,
                    2847
                ],
                "63": [
                    8,
                    2844
                ],
                "64": [
                    1017,
                    249
                ],
                "65": [
                    2516,
                    2516
                ],
                "66": [
                    1214,
                    1302
                ],
                "67": [
                    2516,
                    1214
                ],
                "68": [
                    0,
                    0
                ],
                "69": [
                    4,
                    345
                ],
                "70": [
                    349,
                    4,
                    4,
                    0
                ],
                "71": [
                    345,
                    0
                ],
                "72": [
                    345,
                    0
                ],
                "73": [
                    345,
                    345
                ],
                "74": [
                    343,
                    2
                ],
                "75": [
                    342,
                    1
                ],
                "76": [
                    4,
                    0
                ],
                "77": [
                    0,
                    4
                ],
                "78": [
                    354,
                    346
                ],
                "79": [
                    6,
                    2
                ],
                "80": [
                    2,
                    2,
                    0
                ],
                "81": [
                    1,
                    1
                ],
                "82": [
                    2,
                    2
                ],
                "83": [
                    2,
                    2,
                    0
                ],
                "84": [
                    1,
                    1
                ],
                "85": [
                    6358,
                    20967
                ],
                "86": [
                    27325,
                    21139
                ],
                "87": [
                    12323,
                    8644
                ],
                "88": [
                    172,
                    349
                ],
                "89": [
                    521,
                    521,
                    392
                ]
            },
            "f": {
                "1": 1,
                "2": 9,
                "3": 9,
                "4": 9,
                "5": 0,
                "6": 8,
                "7": 9,
                "8": 3199,
                "9": 3186,
                "10": 8,
                "11": 8,
                "12": 0,
                "13": 58,
                "14": 1,
                "15": 1364,
                "16": 1,
                "17": 340,
                "18": 11,
                "19": 684,
                "20": 684,
                "21": 0,
                "22": 10153,
                "23": 5069,
                "24": 5079,
                "25": 43,
                "26": 24,
                "27": 2,
                "28": 224,
                "29": 2,
                "30": 10,
                "31": 4563,
                "32": 4553,
                "33": 16,
                "34": 1778,
                "35": 1773,
                "36": 3,
                "37": 2,
                "38": 2,
                "39": 5,
                "40": 9,
                "41": 3,
                "42": 43,
                "43": 43,
                "44": 89,
                "45": 2852,
                "46": 1449,
                "47": 5074,
                "48": 1017,
                "49": 2516,
                "50": 4625,
                "51": 0,
                "52": 3802,
                "53": 349,
                "54": 4,
                "55": 4,
                "56": 354,
                "57": 1403,
                "58": 46,
                "59": 107,
                "60": 8,
                "61": 2,
                "62": 2,
                "63": 0,
                "64": 0,
                "65": 0,
                "66": 4,
                "67": 0,
                "68": 0,
                "69": 27325,
                "70": 521,
                "71": 2852,
                "72": 0,
                "73": 3334
            },
            "fnMap": {
                "1": {
                    "name": "(anonymous_1)",
                    "line": 1,
                    "loc": {
                        "start": {
                            "line": 1,
                            "column": 34
                        },
                        "end": {
                            "line": 1,
                            "column": 53
                        }
                    }
                },
                "2": {
                    "name": "(anonymous_2)",
                    "line": 53,
                    "loc": {
                        "start": {
                            "line": 53,
                            "column": 9
                        },
                        "end": {
                            "line": 53,
                            "column": 25
                        }
                    }
                },
                "3": {
                    "name": "(anonymous_3)",
                    "line": 145,
                    "loc": {
                        "start": {
                            "line": 145,
                            "column": 20
                        },
                        "end": {
                            "line": 145,
                            "column": 32
                        }
                    }
                },
                "4": {
                    "name": "(anonymous_4)",
                    "line": 154,
                    "loc": {
                        "start": {
                            "line": 154,
                            "column": 20
                        },
                        "end": {
                            "line": 154,
                            "column": 32
                        }
                    }
                },
                "5": {
                    "name": "(anonymous_5)",
                    "line": 155,
                    "loc": {
                        "start": {
                            "line": 155,
                            "column": 36
                        },
                        "end": {
                            "line": 155,
                            "column": 54
                        }
                    }
                },
                "6": {
                    "name": "(anonymous_6)",
                    "line": 159,
                    "loc": {
                        "start": {
                            "line": 159,
                            "column": 44
                        },
                        "end": {
                            "line": 159,
                            "column": 64
                        }
                    }
                },
                "7": {
                    "name": "(anonymous_7)",
                    "line": 187,
                    "loc": {
                        "start": {
                            "line": 187,
                            "column": 21
                        },
                        "end": {
                            "line": 187,
                            "column": 37
                        }
                    }
                },
                "8": {
                    "name": "(anonymous_8)",
                    "line": 199,
                    "loc": {
                        "start": {
                            "line": 199,
                            "column": 20
                        },
                        "end": {
                            "line": 199,
                            "column": 43
                        }
                    }
                },
                "9": {
                    "name": "(anonymous_9)",
                    "line": 202,
                    "loc": {
                        "start": {
                            "line": 202,
                            "column": 46
                        },
                        "end": {
                            "line": 202,
                            "column": 66
                        }
                    }
                },
                "10": {
                    "name": "(anonymous_10)",
                    "line": 227,
                    "loc": {
                        "start": {
                            "line": 227,
                            "column": 12
                        },
                        "end": {
                            "line": 227,
                            "column": 24
                        }
                    }
                },
                "11": {
                    "name": "(anonymous_11)",
                    "line": 238,
                    "loc": {
                        "start": {
                            "line": 238,
                            "column": 16
                        },
                        "end": {
                            "line": 238,
                            "column": 27
                        }
                    }
                },
                "12": {
                    "name": "(anonymous_12)",
                    "line": 243,
                    "loc": {
                        "start": {
                            "line": 243,
                            "column": 45
                        },
                        "end": {
                            "line": 243,
                            "column": 62
                        }
                    }
                },
                "13": {
                    "name": "(anonymous_13)",
                    "line": 263,
                    "loc": {
                        "start": {
                            "line": 263,
                            "column": 14
                        },
                        "end": {
                            "line": 263,
                            "column": 34
                        }
                    }
                },
                "14": {
                    "name": "(anonymous_14)",
                    "line": 281,
                    "loc": {
                        "start": {
                            "line": 281,
                            "column": 19
                        },
                        "end": {
                            "line": 281,
                            "column": 31
                        }
                    }
                },
                "15": {
                    "name": "(anonymous_15)",
                    "line": 282,
                    "loc": {
                        "start": {
                            "line": 282,
                            "column": 31
                        },
                        "end": {
                            "line": 282,
                            "column": 47
                        }
                    }
                },
                "16": {
                    "name": "(anonymous_16)",
                    "line": 294,
                    "loc": {
                        "start": {
                            "line": 294,
                            "column": 21
                        },
                        "end": {
                            "line": 294,
                            "column": 33
                        }
                    }
                },
                "17": {
                    "name": "(anonymous_17)",
                    "line": 295,
                    "loc": {
                        "start": {
                            "line": 295,
                            "column": 31
                        },
                        "end": {
                            "line": 295,
                            "column": 47
                        }
                    }
                },
                "18": {
                    "name": "(anonymous_18)",
                    "line": 314,
                    "loc": {
                        "start": {
                            "line": 314,
                            "column": 19
                        },
                        "end": {
                            "line": 314,
                            "column": 42
                        }
                    }
                },
                "19": {
                    "name": "(anonymous_19)",
                    "line": 319,
                    "loc": {
                        "start": {
                            "line": 319,
                            "column": 21
                        },
                        "end": {
                            "line": 319,
                            "column": 37
                        }
                    }
                },
                "20": {
                    "name": "(anonymous_20)",
                    "line": 325,
                    "loc": {
                        "start": {
                            "line": 325,
                            "column": 30
                        },
                        "end": {
                            "line": 325,
                            "column": 46
                        }
                    }
                },
                "21": {
                    "name": "(anonymous_21)",
                    "line": 343,
                    "loc": {
                        "start": {
                            "line": 343,
                            "column": 24
                        },
                        "end": {
                            "line": 343,
                            "column": 37
                        }
                    }
                },
                "22": {
                    "name": "(anonymous_22)",
                    "line": 357,
                    "loc": {
                        "start": {
                            "line": 357,
                            "column": 24
                        },
                        "end": {
                            "line": 357,
                            "column": 41
                        }
                    }
                },
                "23": {
                    "name": "(anonymous_23)",
                    "line": 381,
                    "loc": {
                        "start": {
                            "line": 381,
                            "column": 20
                        },
                        "end": {
                            "line": 381,
                            "column": 36
                        }
                    }
                },
                "24": {
                    "name": "(anonymous_24)",
                    "line": 409,
                    "loc": {
                        "start": {
                            "line": 409,
                            "column": 21
                        },
                        "end": {
                            "line": 409,
                            "column": 39
                        }
                    }
                },
                "25": {
                    "name": "(anonymous_25)",
                    "line": 434,
                    "loc": {
                        "start": {
                            "line": 434,
                            "column": 21
                        },
                        "end": {
                            "line": 434,
                            "column": 38
                        }
                    }
                },
                "26": {
                    "name": "(anonymous_26)",
                    "line": 462,
                    "loc": {
                        "start": {
                            "line": 462,
                            "column": 17
                        },
                        "end": {
                            "line": 462,
                            "column": 29
                        }
                    }
                },
                "27": {
                    "name": "(anonymous_27)",
                    "line": 472,
                    "loc": {
                        "start": {
                            "line": 472,
                            "column": 29
                        },
                        "end": {
                            "line": 472,
                            "column": 42
                        }
                    }
                },
                "28": {
                    "name": "(anonymous_28)",
                    "line": 475,
                    "loc": {
                        "start": {
                            "line": 475,
                            "column": 23
                        },
                        "end": {
                            "line": 475,
                            "column": 40
                        }
                    }
                },
                "29": {
                    "name": "(anonymous_29)",
                    "line": 497,
                    "loc": {
                        "start": {
                            "line": 497,
                            "column": 29
                        },
                        "end": {
                            "line": 497,
                            "column": 43
                        }
                    }
                },
                "30": {
                    "name": "(anonymous_30)",
                    "line": 516,
                    "loc": {
                        "start": {
                            "line": 516,
                            "column": 23
                        },
                        "end": {
                            "line": 516,
                            "column": 43
                        }
                    }
                },
                "31": {
                    "name": "(anonymous_31)",
                    "line": 518,
                    "loc": {
                        "start": {
                            "line": 518,
                            "column": 23
                        },
                        "end": {
                            "line": 518,
                            "column": 46
                        }
                    }
                },
                "32": {
                    "name": "(anonymous_32)",
                    "line": 519,
                    "loc": {
                        "start": {
                            "line": 519,
                            "column": 57
                        },
                        "end": {
                            "line": 519,
                            "column": 85
                        }
                    }
                },
                "33": {
                    "name": "(anonymous_33)",
                    "line": 539,
                    "loc": {
                        "start": {
                            "line": 539,
                            "column": 22
                        },
                        "end": {
                            "line": 539,
                            "column": 43
                        }
                    }
                },
                "34": {
                    "name": "(anonymous_34)",
                    "line": 543,
                    "loc": {
                        "start": {
                            "line": 543,
                            "column": 30
                        },
                        "end": {
                            "line": 543,
                            "column": 55
                        }
                    }
                },
                "35": {
                    "name": "(anonymous_35)",
                    "line": 544,
                    "loc": {
                        "start": {
                            "line": 544,
                            "column": 43
                        },
                        "end": {
                            "line": 544,
                            "column": 75
                        }
                    }
                },
                "36": {
                    "name": "(anonymous_36)",
                    "line": 561,
                    "loc": {
                        "start": {
                            "line": 561,
                            "column": 28
                        },
                        "end": {
                            "line": 561,
                            "column": 40
                        }
                    }
                },
                "37": {
                    "name": "(anonymous_37)",
                    "line": 571,
                    "loc": {
                        "start": {
                            "line": 571,
                            "column": 28
                        },
                        "end": {
                            "line": 571,
                            "column": 45
                        }
                    }
                },
                "38": {
                    "name": "(anonymous_38)",
                    "line": 586,
                    "loc": {
                        "start": {
                            "line": 586,
                            "column": 23
                        },
                        "end": {
                            "line": 586,
                            "column": 40
                        }
                    }
                },
                "39": {
                    "name": "(anonymous_39)",
                    "line": 590,
                    "loc": {
                        "start": {
                            "line": 590,
                            "column": 25
                        },
                        "end": {
                            "line": 590,
                            "column": 42
                        }
                    }
                },
                "40": {
                    "name": "(anonymous_40)",
                    "line": 624,
                    "loc": {
                        "start": {
                            "line": 624,
                            "column": 30
                        },
                        "end": {
                            "line": 624,
                            "column": 47
                        }
                    }
                },
                "41": {
                    "name": "(anonymous_41)",
                    "line": 629,
                    "loc": {
                        "start": {
                            "line": 629,
                            "column": 35
                        },
                        "end": {
                            "line": 629,
                            "column": 51
                        }
                    }
                },
                "42": {
                    "name": "(anonymous_42)",
                    "line": 739,
                    "loc": {
                        "start": {
                            "line": 739,
                            "column": 21
                        },
                        "end": {
                            "line": 739,
                            "column": 36
                        }
                    }
                },
                "43": {
                    "name": "(anonymous_43)",
                    "line": 752,
                    "loc": {
                        "start": {
                            "line": 752,
                            "column": 24
                        },
                        "end": {
                            "line": 752,
                            "column": 36
                        }
                    }
                },
                "44": {
                    "name": "(anonymous_44)",
                    "line": 754,
                    "loc": {
                        "start": {
                            "line": 754,
                            "column": 39
                        },
                        "end": {
                            "line": 754,
                            "column": 52
                        }
                    }
                },
                "45": {
                    "name": "(anonymous_45)",
                    "line": 778,
                    "loc": {
                        "start": {
                            "line": 778,
                            "column": 12
                        },
                        "end": {
                            "line": 778,
                            "column": 46
                        }
                    }
                },
                "46": {
                    "name": "(anonymous_46)",
                    "line": 797,
                    "loc": {
                        "start": {
                            "line": 797,
                            "column": 27
                        },
                        "end": {
                            "line": 797,
                            "column": 59
                        }
                    }
                },
                "47": {
                    "name": "(anonymous_47)",
                    "line": 833,
                    "loc": {
                        "start": {
                            "line": 833,
                            "column": 12
                        },
                        "end": {
                            "line": 833,
                            "column": 29
                        }
                    }
                },
                "48": {
                    "name": "(anonymous_48)",
                    "line": 845,
                    "loc": {
                        "start": {
                            "line": 845,
                            "column": 21
                        },
                        "end": {
                            "line": 845,
                            "column": 33
                        }
                    }
                },
                "49": {
                    "name": "(anonymous_49)",
                    "line": 858,
                    "loc": {
                        "start": {
                            "line": 858,
                            "column": 19
                        },
                        "end": {
                            "line": 858,
                            "column": 39
                        }
                    }
                },
                "50": {
                    "name": "(anonymous_50)",
                    "line": 864,
                    "loc": {
                        "start": {
                            "line": 864,
                            "column": 26
                        },
                        "end": {
                            "line": 864,
                            "column": 57
                        }
                    }
                },
                "51": {
                    "name": "(anonymous_51)",
                    "line": 878,
                    "loc": {
                        "start": {
                            "line": 878,
                            "column": 27
                        },
                        "end": {
                            "line": 878,
                            "column": 41
                        }
                    }
                },
                "52": {
                    "name": "(anonymous_52)",
                    "line": 894,
                    "loc": {
                        "start": {
                            "line": 894,
                            "column": 19
                        },
                        "end": {
                            "line": 894,
                            "column": 31
                        }
                    }
                },
                "53": {
                    "name": "(anonymous_53)",
                    "line": 906,
                    "loc": {
                        "start": {
                            "line": 906,
                            "column": 24
                        },
                        "end": {
                            "line": 906,
                            "column": 38
                        }
                    }
                },
                "54": {
                    "name": "(anonymous_54)",
                    "line": 940,
                    "loc": {
                        "start": {
                            "line": 940,
                            "column": 16
                        },
                        "end": {
                            "line": 940,
                            "column": 28
                        }
                    }
                },
                "55": {
                    "name": "(anonymous_55)",
                    "line": 953,
                    "loc": {
                        "start": {
                            "line": 953,
                            "column": 22
                        },
                        "end": {
                            "line": 953,
                            "column": 42
                        }
                    }
                },
                "56": {
                    "name": "(anonymous_56)",
                    "line": 978,
                    "loc": {
                        "start": {
                            "line": 978,
                            "column": 19
                        },
                        "end": {
                            "line": 978,
                            "column": 33
                        }
                    }
                },
                "57": {
                    "name": "(anonymous_57)",
                    "line": 983,
                    "loc": {
                        "start": {
                            "line": 983,
                            "column": 24
                        },
                        "end": {
                            "line": 983,
                            "column": 56
                        }
                    }
                },
                "58": {
                    "name": "(anonymous_58)",
                    "line": 995,
                    "loc": {
                        "start": {
                            "line": 995,
                            "column": 8
                        },
                        "end": {
                            "line": 995,
                            "column": 20
                        }
                    }
                },
                "59": {
                    "name": "(anonymous_59)",
                    "line": 1009,
                    "loc": {
                        "start": {
                            "line": 1009,
                            "column": 11
                        },
                        "end": {
                            "line": 1009,
                            "column": 23
                        }
                    }
                },
                "60": {
                    "name": "(anonymous_60)",
                    "line": 1021,
                    "loc": {
                        "start": {
                            "line": 1021,
                            "column": 13
                        },
                        "end": {
                            "line": 1021,
                            "column": 24
                        }
                    }
                },
                "61": {
                    "name": "(anonymous_61)",
                    "line": 1032,
                    "loc": {
                        "start": {
                            "line": 1032,
                            "column": 18
                        },
                        "end": {
                            "line": 1032,
                            "column": 29
                        }
                    }
                },
                "62": {
                    "name": "(anonymous_62)",
                    "line": 1048,
                    "loc": {
                        "start": {
                            "line": 1048,
                            "column": 22
                        },
                        "end": {
                            "line": 1048,
                            "column": 33
                        }
                    }
                },
                "63": {
                    "name": "(anonymous_63)",
                    "line": 1062,
                    "loc": {
                        "start": {
                            "line": 1062,
                            "column": 15
                        },
                        "end": {
                            "line": 1062,
                            "column": 26
                        }
                    }
                },
                "64": {
                    "name": "(anonymous_64)",
                    "line": 1070,
                    "loc": {
                        "start": {
                            "line": 1070,
                            "column": 14
                        },
                        "end": {
                            "line": 1070,
                            "column": 26
                        }
                    }
                },
                "65": {
                    "name": "(anonymous_65)",
                    "line": 1078,
                    "loc": {
                        "start": {
                            "line": 1078,
                            "column": 10
                        },
                        "end": {
                            "line": 1078,
                            "column": 21
                        }
                    }
                },
                "66": {
                    "name": "(anonymous_66)",
                    "line": 1086,
                    "loc": {
                        "start": {
                            "line": 1086,
                            "column": 16
                        },
                        "end": {
                            "line": 1086,
                            "column": 27
                        }
                    }
                },
                "67": {
                    "name": "(anonymous_67)",
                    "line": 1094,
                    "loc": {
                        "start": {
                            "line": 1094,
                            "column": 18
                        },
                        "end": {
                            "line": 1094,
                            "column": 29
                        }
                    }
                },
                "68": {
                    "name": "(anonymous_68)",
                    "line": 1102,
                    "loc": {
                        "start": {
                            "line": 1102,
                            "column": 10
                        },
                        "end": {
                            "line": 1102,
                            "column": 21
                        }
                    }
                },
                "69": {
                    "name": "(anonymous_69)",
                    "line": 1114,
                    "loc": {
                        "start": {
                            "line": 1114,
                            "column": 17
                        },
                        "end": {
                            "line": 1114,
                            "column": 32
                        }
                    }
                },
                "70": {
                    "name": "(anonymous_70)",
                    "line": 1134,
                    "loc": {
                        "start": {
                            "line": 1134,
                            "column": 17
                        },
                        "end": {
                            "line": 1134,
                            "column": 39
                        }
                    }
                },
                "71": {
                    "name": "(anonymous_71)",
                    "line": 1254,
                    "loc": {
                        "start": {
                            "line": 1254,
                            "column": 12
                        },
                        "end": {
                            "line": 1254,
                            "column": 23
                        }
                    }
                },
                "72": {
                    "name": "(anonymous_72)",
                    "line": 1290,
                    "loc": {
                        "start": {
                            "line": 1290,
                            "column": 15
                        },
                        "end": {
                            "line": 1290,
                            "column": 27
                        }
                    }
                },
                "73": {
                    "name": "(anonymous_73)",
                    "line": 1304,
                    "loc": {
                        "start": {
                            "line": 1304,
                            "column": 12
                        },
                        "end": {
                            "line": 1304,
                            "column": 24
                        }
                    }
                }
            },
            "statementMap": {
                "1": {
                    "start": {
                        "line": 1,
                        "column": 0
                    },
                    "end": {
                        "line": 1330,
                        "column": 76
                    }
                },
                "2": {
                    "start": {
                        "line": 35,
                        "column": 0
                    },
                    "end": {
                        "line": 35,
                        "column": 13
                    }
                },
                "3": {
                    "start": {
                        "line": 37,
                        "column": 0
                    },
                    "end": {
                        "line": 58,
                        "column": 8
                    }
                },
                "4": {
                    "start": {
                        "line": 54,
                        "column": 2
                    },
                    "end": {
                        "line": 54,
                        "column": 37
                    }
                },
                "5": {
                    "start": {
                        "line": 86,
                        "column": 0
                    },
                    "end": {
                        "line": 692,
                        "column": 7
                    }
                },
                "6": {
                    "start": {
                        "line": 146,
                        "column": 12
                    },
                    "end": {
                        "line": 146,
                        "column": 28
                    }
                },
                "7": {
                    "start": {
                        "line": 147,
                        "column": 12
                    },
                    "end": {
                        "line": 147,
                        "column": 36
                    }
                },
                "8": {
                    "start": {
                        "line": 155,
                        "column": 12
                    },
                    "end": {
                        "line": 157,
                        "column": 15
                    }
                },
                "9": {
                    "start": {
                        "line": 156,
                        "column": 16
                    },
                    "end": {
                        "line": 156,
                        "column": 33
                    }
                },
                "10": {
                    "start": {
                        "line": 158,
                        "column": 12
                    },
                    "end": {
                        "line": 158,
                        "column": 30
                    }
                },
                "11": {
                    "start": {
                        "line": 159,
                        "column": 12
                    },
                    "end": {
                        "line": 161,
                        "column": 15
                    }
                },
                "12": {
                    "start": {
                        "line": 160,
                        "column": 16
                    },
                    "end": {
                        "line": 160,
                        "column": 34
                    }
                },
                "13": {
                    "start": {
                        "line": 162,
                        "column": 12
                    },
                    "end": {
                        "line": 162,
                        "column": 38
                    }
                },
                "14": {
                    "start": {
                        "line": 188,
                        "column": 12
                    },
                    "end": {
                        "line": 190,
                        "column": 14
                    }
                },
                "15": {
                    "start": {
                        "line": 191,
                        "column": 12
                    },
                    "end": {
                        "line": 191,
                        "column": 40
                    }
                },
                "16": {
                    "start": {
                        "line": 200,
                        "column": 12
                    },
                    "end": {
                        "line": 201,
                        "column": 53
                    }
                },
                "17": {
                    "start": {
                        "line": 202,
                        "column": 12
                    },
                    "end": {
                        "line": 218,
                        "column": 15
                    }
                },
                "18": {
                    "start": {
                        "line": 203,
                        "column": 16
                    },
                    "end": {
                        "line": 206,
                        "column": 17
                    }
                },
                "19": {
                    "start": {
                        "line": 204,
                        "column": 20
                    },
                    "end": {
                        "line": 204,
                        "column": 43
                    }
                },
                "20": {
                    "start": {
                        "line": 205,
                        "column": 20
                    },
                    "end": {
                        "line": 205,
                        "column": 52
                    }
                },
                "21": {
                    "start": {
                        "line": 207,
                        "column": 16
                    },
                    "end": {
                        "line": 209,
                        "column": 17
                    }
                },
                "22": {
                    "start": {
                        "line": 208,
                        "column": 20
                    },
                    "end": {
                        "line": 208,
                        "column": 47
                    }
                },
                "23": {
                    "start": {
                        "line": 210,
                        "column": 16
                    },
                    "end": {
                        "line": 210,
                        "column": 44
                    }
                },
                "24": {
                    "start": {
                        "line": 211,
                        "column": 16
                    },
                    "end": {
                        "line": 211,
                        "column": 48
                    }
                },
                "25": {
                    "start": {
                        "line": 212,
                        "column": 16
                    },
                    "end": {
                        "line": 216,
                        "column": 17
                    }
                },
                "26": {
                    "start": {
                        "line": 213,
                        "column": 20
                    },
                    "end": {
                        "line": 213,
                        "column": 52
                    }
                },
                "27": {
                    "start": {
                        "line": 215,
                        "column": 20
                    },
                    "end": {
                        "line": 215,
                        "column": 88
                    }
                },
                "28": {
                    "start": {
                        "line": 217,
                        "column": 16
                    },
                    "end": {
                        "line": 217,
                        "column": 39
                    }
                },
                "29": {
                    "start": {
                        "line": 228,
                        "column": 12
                    },
                    "end": {
                        "line": 228,
                        "column": 38
                    }
                },
                "30": {
                    "start": {
                        "line": 229,
                        "column": 12
                    },
                    "end": {
                        "line": 229,
                        "column": 48
                    }
                },
                "31": {
                    "start": {
                        "line": 230,
                        "column": 12
                    },
                    "end": {
                        "line": 230,
                        "column": 27
                    }
                },
                "32": {
                    "start": {
                        "line": 239,
                        "column": 12
                    },
                    "end": {
                        "line": 239,
                        "column": 28
                    }
                },
                "33": {
                    "start": {
                        "line": 241,
                        "column": 12
                    },
                    "end": {
                        "line": 241,
                        "column": 75
                    }
                },
                "34": {
                    "start": {
                        "line": 242,
                        "column": 12
                    },
                    "end": {
                        "line": 246,
                        "column": 13
                    }
                },
                "35": {
                    "start": {
                        "line": 243,
                        "column": 16
                    },
                    "end": {
                        "line": 245,
                        "column": 19
                    }
                },
                "36": {
                    "start": {
                        "line": 244,
                        "column": 20
                    },
                    "end": {
                        "line": 244,
                        "column": 90
                    }
                },
                "37": {
                    "start": {
                        "line": 264,
                        "column": 12
                    },
                    "end": {
                        "line": 264,
                        "column": 33
                    }
                },
                "38": {
                    "start": {
                        "line": 265,
                        "column": 12
                    },
                    "end": {
                        "line": 270,
                        "column": 13
                    }
                },
                "39": {
                    "start": {
                        "line": 266,
                        "column": 16
                    },
                    "end": {
                        "line": 266,
                        "column": 55
                    }
                },
                "40": {
                    "start": {
                        "line": 267,
                        "column": 16
                    },
                    "end": {
                        "line": 267,
                        "column": 65
                    }
                },
                "41": {
                    "start": {
                        "line": 268,
                        "column": 16
                    },
                    "end": {
                        "line": 268,
                        "column": 42
                    }
                },
                "42": {
                    "start": {
                        "line": 269,
                        "column": 16
                    },
                    "end": {
                        "line": 269,
                        "column": 27
                    }
                },
                "43": {
                    "start": {
                        "line": 271,
                        "column": 12
                    },
                    "end": {
                        "line": 271,
                        "column": 64
                    }
                },
                "44": {
                    "start": {
                        "line": 282,
                        "column": 12
                    },
                    "end": {
                        "line": 286,
                        "column": 15
                    }
                },
                "45": {
                    "start": {
                        "line": 283,
                        "column": 16
                    },
                    "end": {
                        "line": 285,
                        "column": 17
                    }
                },
                "46": {
                    "start": {
                        "line": 284,
                        "column": 20
                    },
                    "end": {
                        "line": 284,
                        "column": 81
                    }
                },
                "47": {
                    "start": {
                        "line": 295,
                        "column": 12
                    },
                    "end": {
                        "line": 299,
                        "column": 15
                    }
                },
                "48": {
                    "start": {
                        "line": 296,
                        "column": 16
                    },
                    "end": {
                        "line": 298,
                        "column": 17
                    }
                },
                "49": {
                    "start": {
                        "line": 297,
                        "column": 20
                    },
                    "end": {
                        "line": 297,
                        "column": 82
                    }
                },
                "50": {
                    "start": {
                        "line": 315,
                        "column": 12
                    },
                    "end": {
                        "line": 315,
                        "column": 33
                    }
                },
                "51": {
                    "start": {
                        "line": 316,
                        "column": 12
                    },
                    "end": {
                        "line": 324,
                        "column": 13
                    }
                },
                "52": {
                    "start": {
                        "line": 317,
                        "column": 16
                    },
                    "end": {
                        "line": 317,
                        "column": 26
                    }
                },
                "53": {
                    "start": {
                        "line": 318,
                        "column": 19
                    },
                    "end": {
                        "line": 324,
                        "column": 13
                    }
                },
                "54": {
                    "start": {
                        "line": 319,
                        "column": 16
                    },
                    "end": {
                        "line": 321,
                        "column": 18
                    }
                },
                "55": {
                    "start": {
                        "line": 320,
                        "column": 20
                    },
                    "end": {
                        "line": 320,
                        "column": 52
                    }
                },
                "56": {
                    "start": {
                        "line": 323,
                        "column": 16
                    },
                    "end": {
                        "line": 323,
                        "column": 28
                    }
                },
                "57": {
                    "start": {
                        "line": 325,
                        "column": 12
                    },
                    "end": {
                        "line": 332,
                        "column": 15
                    }
                },
                "58": {
                    "start": {
                        "line": 326,
                        "column": 16
                    },
                    "end": {
                        "line": 330,
                        "column": 17
                    }
                },
                "59": {
                    "start": {
                        "line": 327,
                        "column": 20
                    },
                    "end": {
                        "line": 327,
                        "column": 33
                    }
                },
                "60": {
                    "start": {
                        "line": 328,
                        "column": 20
                    },
                    "end": {
                        "line": 328,
                        "column": 33
                    }
                },
                "61": {
                    "start": {
                        "line": 329,
                        "column": 20
                    },
                    "end": {
                        "line": 329,
                        "column": 32
                    }
                },
                "62": {
                    "start": {
                        "line": 331,
                        "column": 16
                    },
                    "end": {
                        "line": 331,
                        "column": 29
                    }
                },
                "63": {
                    "start": {
                        "line": 333,
                        "column": 12
                    },
                    "end": {
                        "line": 333,
                        "column": 25
                    }
                },
                "64": {
                    "start": {
                        "line": 344,
                        "column": 12
                    },
                    "end": {
                        "line": 344,
                        "column": 34
                    }
                },
                "65": {
                    "start": {
                        "line": 345,
                        "column": 12
                    },
                    "end": {
                        "line": 347,
                        "column": 13
                    }
                },
                "66": {
                    "start": {
                        "line": 346,
                        "column": 16
                    },
                    "end": {
                        "line": 346,
                        "column": 75
                    }
                },
                "67": {
                    "start": {
                        "line": 358,
                        "column": 12
                    },
                    "end": {
                        "line": 358,
                        "column": 34
                    }
                },
                "68": {
                    "start": {
                        "line": 359,
                        "column": 12
                    },
                    "end": {
                        "line": 361,
                        "column": 13
                    }
                },
                "69": {
                    "start": {
                        "line": 360,
                        "column": 16
                    },
                    "end": {
                        "line": 360,
                        "column": 36
                    }
                },
                "70": {
                    "start": {
                        "line": 362,
                        "column": 12
                    },
                    "end": {
                        "line": 364,
                        "column": 13
                    }
                },
                "71": {
                    "start": {
                        "line": 363,
                        "column": 16
                    },
                    "end": {
                        "line": 363,
                        "column": 31
                    }
                },
                "72": {
                    "start": {
                        "line": 365,
                        "column": 12
                    },
                    "end": {
                        "line": 365,
                        "column": 29
                    }
                },
                "73": {
                    "start": {
                        "line": 366,
                        "column": 12
                    },
                    "end": {
                        "line": 368,
                        "column": 13
                    }
                },
                "74": {
                    "start": {
                        "line": 367,
                        "column": 16
                    },
                    "end": {
                        "line": 367,
                        "column": 51
                    }
                },
                "75": {
                    "start": {
                        "line": 369,
                        "column": 12
                    },
                    "end": {
                        "line": 369,
                        "column": 24
                    }
                },
                "76": {
                    "start": {
                        "line": 383,
                        "column": 12
                    },
                    "end": {
                        "line": 385,
                        "column": 50
                    }
                },
                "77": {
                    "start": {
                        "line": 387,
                        "column": 12
                    },
                    "end": {
                        "line": 398,
                        "column": 13
                    }
                },
                "78": {
                    "start": {
                        "line": 388,
                        "column": 16
                    },
                    "end": {
                        "line": 388,
                        "column": 40
                    }
                },
                "79": {
                    "start": {
                        "line": 389,
                        "column": 16
                    },
                    "end": {
                        "line": 391,
                        "column": 17
                    }
                },
                "80": {
                    "start": {
                        "line": 390,
                        "column": 20
                    },
                    "end": {
                        "line": 390,
                        "column": 49
                    }
                },
                "81": {
                    "start": {
                        "line": 392,
                        "column": 16
                    },
                    "end": {
                        "line": 397,
                        "column": 17
                    }
                },
                "82": {
                    "start": {
                        "line": 393,
                        "column": 20
                    },
                    "end": {
                        "line": 393,
                        "column": 40
                    }
                },
                "83": {
                    "start": {
                        "line": 394,
                        "column": 20
                    },
                    "end": {
                        "line": 394,
                        "column": 43
                    }
                },
                "84": {
                    "start": {
                        "line": 396,
                        "column": 20
                    },
                    "end": {
                        "line": 396,
                        "column": 53
                    }
                },
                "85": {
                    "start": {
                        "line": 399,
                        "column": 12
                    },
                    "end": {
                        "line": 399,
                        "column": 57
                    }
                },
                "86": {
                    "start": {
                        "line": 400,
                        "column": 12
                    },
                    "end": {
                        "line": 400,
                        "column": 26
                    }
                },
                "87": {
                    "start": {
                        "line": 410,
                        "column": 12
                    },
                    "end": {
                        "line": 412,
                        "column": 50
                    }
                },
                "88": {
                    "start": {
                        "line": 414,
                        "column": 12
                    },
                    "end": {
                        "line": 414,
                        "column": 34
                    }
                },
                "89": {
                    "start": {
                        "line": 415,
                        "column": 12
                    },
                    "end": {
                        "line": 417,
                        "column": 13
                    }
                },
                "90": {
                    "start": {
                        "line": 416,
                        "column": 16
                    },
                    "end": {
                        "line": 416,
                        "column": 23
                    }
                },
                "91": {
                    "start": {
                        "line": 418,
                        "column": 12
                    },
                    "end": {
                        "line": 418,
                        "column": 33
                    }
                },
                "92": {
                    "start": {
                        "line": 419,
                        "column": 12
                    },
                    "end": {
                        "line": 419,
                        "column": 39
                    }
                },
                "93": {
                    "start": {
                        "line": 420,
                        "column": 12
                    },
                    "end": {
                        "line": 420,
                        "column": 36
                    }
                },
                "94": {
                    "start": {
                        "line": 421,
                        "column": 12
                    },
                    "end": {
                        "line": 423,
                        "column": 13
                    }
                },
                "95": {
                    "start": {
                        "line": 422,
                        "column": 16
                    },
                    "end": {
                        "line": 422,
                        "column": 34
                    }
                },
                "96": {
                    "start": {
                        "line": 435,
                        "column": 12
                    },
                    "end": {
                        "line": 436,
                        "column": 61
                    }
                },
                "97": {
                    "start": {
                        "line": 437,
                        "column": 12
                    },
                    "end": {
                        "line": 439,
                        "column": 13
                    }
                },
                "98": {
                    "start": {
                        "line": 438,
                        "column": 16
                    },
                    "end": {
                        "line": 438,
                        "column": 31
                    }
                },
                "99": {
                    "start": {
                        "line": 440,
                        "column": 12
                    },
                    "end": {
                        "line": 453,
                        "column": 13
                    }
                },
                "100": {
                    "start": {
                        "line": 441,
                        "column": 16
                    },
                    "end": {
                        "line": 441,
                        "column": 48
                    }
                },
                "101": {
                    "start": {
                        "line": 442,
                        "column": 16
                    },
                    "end": {
                        "line": 452,
                        "column": 17
                    }
                },
                "102": {
                    "start": {
                        "line": 445,
                        "column": 20
                    },
                    "end": {
                        "line": 445,
                        "column": 41
                    }
                },
                "103": {
                    "start": {
                        "line": 446,
                        "column": 20
                    },
                    "end": {
                        "line": 446,
                        "column": 99
                    }
                },
                "104": {
                    "start": {
                        "line": 449,
                        "column": 20
                    },
                    "end": {
                        "line": 449,
                        "column": 42
                    }
                },
                "105": {
                    "start": {
                        "line": 450,
                        "column": 20
                    },
                    "end": {
                        "line": 450,
                        "column": 44
                    }
                },
                "106": {
                    "start": {
                        "line": 451,
                        "column": 20
                    },
                    "end": {
                        "line": 451,
                        "column": 35
                    }
                },
                "107": {
                    "start": {
                        "line": 454,
                        "column": 12
                    },
                    "end": {
                        "line": 454,
                        "column": 24
                    }
                },
                "108": {
                    "start": {
                        "line": 463,
                        "column": 12
                    },
                    "end": {
                        "line": 463,
                        "column": 54
                    }
                },
                "109": {
                    "start": {
                        "line": 473,
                        "column": 12
                    },
                    "end": {
                        "line": 484,
                        "column": 18
                    }
                },
                "110": {
                    "start": {
                        "line": 476,
                        "column": 20
                    },
                    "end": {
                        "line": 479,
                        "column": 21
                    }
                },
                "111": {
                    "start": {
                        "line": 477,
                        "column": 24
                    },
                    "end": {
                        "line": 477,
                        "column": 38
                    }
                },
                "112": {
                    "start": {
                        "line": 478,
                        "column": 24
                    },
                    "end": {
                        "line": 478,
                        "column": 36
                    }
                },
                "113": {
                    "start": {
                        "line": 480,
                        "column": 20
                    },
                    "end": {
                        "line": 482,
                        "column": 21
                    }
                },
                "114": {
                    "start": {
                        "line": 481,
                        "column": 24
                    },
                    "end": {
                        "line": 481,
                        "column": 65
                    }
                },
                "115": {
                    "start": {
                        "line": 483,
                        "column": 20
                    },
                    "end": {
                        "line": 483,
                        "column": 33
                    }
                },
                "116": {
                    "start": {
                        "line": 485,
                        "column": 12
                    },
                    "end": {
                        "line": 487,
                        "column": 13
                    }
                },
                "117": {
                    "start": {
                        "line": 486,
                        "column": 16
                    },
                    "end": {
                        "line": 486,
                        "column": 29
                    }
                },
                "118": {
                    "start": {
                        "line": 488,
                        "column": 12
                    },
                    "end": {
                        "line": 488,
                        "column": 24
                    }
                },
                "119": {
                    "start": {
                        "line": 498,
                        "column": 12
                    },
                    "end": {
                        "line": 498,
                        "column": 69
                    }
                },
                "120": {
                    "start": {
                        "line": 499,
                        "column": 12
                    },
                    "end": {
                        "line": 501,
                        "column": 13
                    }
                },
                "121": {
                    "start": {
                        "line": 500,
                        "column": 16
                    },
                    "end": {
                        "line": 500,
                        "column": 46
                    }
                },
                "122": {
                    "start": {
                        "line": 502,
                        "column": 12
                    },
                    "end": {
                        "line": 502,
                        "column": 24
                    }
                },
                "123": {
                    "start": {
                        "line": 517,
                        "column": 12
                    },
                    "end": {
                        "line": 517,
                        "column": 34
                    }
                },
                "124": {
                    "start": {
                        "line": 518,
                        "column": 12
                    },
                    "end": {
                        "line": 525,
                        "column": 14
                    }
                },
                "125": {
                    "start": {
                        "line": 519,
                        "column": 16
                    },
                    "end": {
                        "line": 524,
                        "column": 19
                    }
                },
                "126": {
                    "start": {
                        "line": 520,
                        "column": 20
                    },
                    "end": {
                        "line": 522,
                        "column": 21
                    }
                },
                "127": {
                    "start": {
                        "line": 521,
                        "column": 24
                    },
                    "end": {
                        "line": 521,
                        "column": 36
                    }
                },
                "128": {
                    "start": {
                        "line": 523,
                        "column": 20
                    },
                    "end": {
                        "line": 523,
                        "column": 54
                    }
                },
                "129": {
                    "start": {
                        "line": 526,
                        "column": 12
                    },
                    "end": {
                        "line": 526,
                        "column": 39
                    }
                },
                "130": {
                    "start": {
                        "line": 540,
                        "column": 12
                    },
                    "end": {
                        "line": 540,
                        "column": 34
                    }
                },
                "131": {
                    "start": {
                        "line": 542,
                        "column": 12
                    },
                    "end": {
                        "line": 551,
                        "column": 43
                    }
                },
                "132": {
                    "start": {
                        "line": 544,
                        "column": 20
                    },
                    "end": {
                        "line": 549,
                        "column": 23
                    }
                },
                "133": {
                    "start": {
                        "line": 545,
                        "column": 24
                    },
                    "end": {
                        "line": 547,
                        "column": 25
                    }
                },
                "134": {
                    "start": {
                        "line": 546,
                        "column": 28
                    },
                    "end": {
                        "line": 546,
                        "column": 40
                    }
                },
                "135": {
                    "start": {
                        "line": 548,
                        "column": 24
                    },
                    "end": {
                        "line": 548,
                        "column": 62
                    }
                },
                "136": {
                    "start": {
                        "line": 552,
                        "column": 12
                    },
                    "end": {
                        "line": 552,
                        "column": 27
                    }
                },
                "137": {
                    "start": {
                        "line": 553,
                        "column": 12
                    },
                    "end": {
                        "line": 553,
                        "column": 23
                    }
                },
                "138": {
                    "start": {
                        "line": 562,
                        "column": 12
                    },
                    "end": {
                        "line": 562,
                        "column": 62
                    }
                },
                "139": {
                    "start": {
                        "line": 572,
                        "column": 12
                    },
                    "end": {
                        "line": 578,
                        "column": 13
                    }
                },
                "140": {
                    "start": {
                        "line": 573,
                        "column": 16
                    },
                    "end": {
                        "line": 573,
                        "column": 75
                    }
                },
                "141": {
                    "start": {
                        "line": 574,
                        "column": 16
                    },
                    "end": {
                        "line": 574,
                        "column": 45
                    }
                },
                "142": {
                    "start": {
                        "line": 575,
                        "column": 16
                    },
                    "end": {
                        "line": 575,
                        "column": 32
                    }
                },
                "143": {
                    "start": {
                        "line": 577,
                        "column": 16
                    },
                    "end": {
                        "line": 577,
                        "column": 49
                    }
                },
                "144": {
                    "start": {
                        "line": 587,
                        "column": 12
                    },
                    "end": {
                        "line": 596,
                        "column": 18
                    }
                },
                "145": {
                    "start": {
                        "line": 591,
                        "column": 20
                    },
                    "end": {
                        "line": 591,
                        "column": 42
                    }
                },
                "146": {
                    "start": {
                        "line": 592,
                        "column": 20
                    },
                    "end": {
                        "line": 595,
                        "column": 21
                    }
                },
                "147": {
                    "start": {
                        "line": 593,
                        "column": 24
                    },
                    "end": {
                        "line": 593,
                        "column": 38
                    }
                },
                "148": {
                    "start": {
                        "line": 594,
                        "column": 24
                    },
                    "end": {
                        "line": 594,
                        "column": 87
                    }
                },
                "149": {
                    "start": {
                        "line": 598,
                        "column": 12
                    },
                    "end": {
                        "line": 612,
                        "column": 13
                    }
                },
                "150": {
                    "start": {
                        "line": 600,
                        "column": 16
                    },
                    "end": {
                        "line": 600,
                        "column": 84
                    }
                },
                "151": {
                    "start": {
                        "line": 601,
                        "column": 16
                    },
                    "end": {
                        "line": 601,
                        "column": 26
                    }
                },
                "152": {
                    "start": {
                        "line": 602,
                        "column": 16
                    },
                    "end": {
                        "line": 602,
                        "column": 37
                    }
                },
                "153": {
                    "start": {
                        "line": 604,
                        "column": 16
                    },
                    "end": {
                        "line": 604,
                        "column": 30
                    }
                },
                "154": {
                    "start": {
                        "line": 606,
                        "column": 16
                    },
                    "end": {
                        "line": 606,
                        "column": 80
                    }
                },
                "155": {
                    "start": {
                        "line": 607,
                        "column": 16
                    },
                    "end": {
                        "line": 607,
                        "column": 27
                    }
                },
                "156": {
                    "start": {
                        "line": 608,
                        "column": 16
                    },
                    "end": {
                        "line": 608,
                        "column": 35
                    }
                },
                "157": {
                    "start": {
                        "line": 610,
                        "column": 16
                    },
                    "end": {
                        "line": 610,
                        "column": 43
                    }
                },
                "158": {
                    "start": {
                        "line": 625,
                        "column": 12
                    },
                    "end": {
                        "line": 627,
                        "column": 13
                    }
                },
                "159": {
                    "start": {
                        "line": 626,
                        "column": 16
                    },
                    "end": {
                        "line": 626,
                        "column": 49
                    }
                },
                "160": {
                    "start": {
                        "line": 628,
                        "column": 12
                    },
                    "end": {
                        "line": 634,
                        "column": 13
                    }
                },
                "161": {
                    "start": {
                        "line": 629,
                        "column": 16
                    },
                    "end": {
                        "line": 633,
                        "column": 19
                    }
                },
                "162": {
                    "start": {
                        "line": 630,
                        "column": 20
                    },
                    "end": {
                        "line": 632,
                        "column": 21
                    }
                },
                "163": {
                    "start": {
                        "line": 631,
                        "column": 24
                    },
                    "end": {
                        "line": 631,
                        "column": 56
                    }
                },
                "164": {
                    "start": {
                        "line": 635,
                        "column": 12
                    },
                    "end": {
                        "line": 635,
                        "column": 25
                    }
                },
                "165": {
                    "start": {
                        "line": 695,
                        "column": 0
                    },
                    "end": {
                        "line": 695,
                        "column": 31
                    }
                },
                "166": {
                    "start": {
                        "line": 713,
                        "column": 0
                    },
                    "end": {
                        "line": 1325,
                        "column": 2
                    }
                },
                "167": {
                    "start": {
                        "line": 740,
                        "column": 12
                    },
                    "end": {
                        "line": 740,
                        "column": 34
                    }
                },
                "168": {
                    "start": {
                        "line": 741,
                        "column": 12
                    },
                    "end": {
                        "line": 741,
                        "column": 68
                    }
                },
                "169": {
                    "start": {
                        "line": 742,
                        "column": 12
                    },
                    "end": {
                        "line": 742,
                        "column": 62
                    }
                },
                "170": {
                    "start": {
                        "line": 744,
                        "column": 12
                    },
                    "end": {
                        "line": 744,
                        "column": 34
                    }
                },
                "171": {
                    "start": {
                        "line": 753,
                        "column": 12
                    },
                    "end": {
                        "line": 753,
                        "column": 63
                    }
                },
                "172": {
                    "start": {
                        "line": 754,
                        "column": 12
                    },
                    "end": {
                        "line": 758,
                        "column": 15
                    }
                },
                "173": {
                    "start": {
                        "line": 755,
                        "column": 16
                    },
                    "end": {
                        "line": 755,
                        "column": 40
                    }
                },
                "174": {
                    "start": {
                        "line": 756,
                        "column": 16
                    },
                    "end": {
                        "line": 756,
                        "column": 44
                    }
                },
                "175": {
                    "start": {
                        "line": 757,
                        "column": 16
                    },
                    "end": {
                        "line": 757,
                        "column": 44
                    }
                },
                "176": {
                    "start": {
                        "line": 759,
                        "column": 12
                    },
                    "end": {
                        "line": 759,
                        "column": 35
                    }
                },
                "177": {
                    "start": {
                        "line": 760,
                        "column": 12
                    },
                    "end": {
                        "line": 760,
                        "column": 39
                    }
                },
                "178": {
                    "start": {
                        "line": 761,
                        "column": 12
                    },
                    "end": {
                        "line": 761,
                        "column": 39
                    }
                },
                "179": {
                    "start": {
                        "line": 780,
                        "column": 3
                    },
                    "end": {
                        "line": 789,
                        "column": 77
                    }
                },
                "180": {
                    "start": {
                        "line": 791,
                        "column": 12
                    },
                    "end": {
                        "line": 791,
                        "column": 55
                    }
                },
                "181": {
                    "start": {
                        "line": 792,
                        "column": 12
                    },
                    "end": {
                        "line": 792,
                        "column": 33
                    }
                },
                "182": {
                    "start": {
                        "line": 793,
                        "column": 3
                    },
                    "end": {
                        "line": 793,
                        "column": 26
                    }
                },
                "183": {
                    "start": {
                        "line": 794,
                        "column": 3
                    },
                    "end": {
                        "line": 810,
                        "column": 4
                    }
                },
                "184": {
                    "start": {
                        "line": 795,
                        "column": 4
                    },
                    "end": {
                        "line": 803,
                        "column": 5
                    }
                },
                "185": {
                    "start": {
                        "line": 796,
                        "column": 5
                    },
                    "end": {
                        "line": 796,
                        "column": 36
                    }
                },
                "186": {
                    "start": {
                        "line": 797,
                        "column": 5
                    },
                    "end": {
                        "line": 799,
                        "column": 8
                    }
                },
                "187": {
                    "start": {
                        "line": 798,
                        "column": 6
                    },
                    "end": {
                        "line": 798,
                        "column": 59
                    }
                },
                "188": {
                    "start": {
                        "line": 800,
                        "column": 5
                    },
                    "end": {
                        "line": 800,
                        "column": 45
                    }
                },
                "189": {
                    "start": {
                        "line": 802,
                        "column": 5
                    },
                    "end": {
                        "line": 802,
                        "column": 46
                    }
                },
                "190": {
                    "start": {
                        "line": 805,
                        "column": 4
                    },
                    "end": {
                        "line": 809,
                        "column": 5
                    }
                },
                "191": {
                    "start": {
                        "line": 806,
                        "column": 5
                    },
                    "end": {
                        "line": 806,
                        "column": 46
                    }
                },
                "192": {
                    "start": {
                        "line": 808,
                        "column": 5
                    },
                    "end": {
                        "line": 808,
                        "column": 47
                    }
                },
                "193": {
                    "start": {
                        "line": 811,
                        "column": 3
                    },
                    "end": {
                        "line": 813,
                        "column": 4
                    }
                },
                "194": {
                    "start": {
                        "line": 812,
                        "column": 4
                    },
                    "end": {
                        "line": 812,
                        "column": 46
                    }
                },
                "195": {
                    "start": {
                        "line": 814,
                        "column": 3
                    },
                    "end": {
                        "line": 816,
                        "column": 4
                    }
                },
                "196": {
                    "start": {
                        "line": 815,
                        "column": 4
                    },
                    "end": {
                        "line": 815,
                        "column": 45
                    }
                },
                "197": {
                    "start": {
                        "line": 817,
                        "column": 12
                    },
                    "end": {
                        "line": 819,
                        "column": 13
                    }
                },
                "198": {
                    "start": {
                        "line": 818,
                        "column": 16
                    },
                    "end": {
                        "line": 818,
                        "column": 88
                    }
                },
                "199": {
                    "start": {
                        "line": 820,
                        "column": 3
                    },
                    "end": {
                        "line": 820,
                        "column": 22
                    }
                },
                "200": {
                    "start": {
                        "line": 821,
                        "column": 3
                    },
                    "end": {
                        "line": 821,
                        "column": 44
                    }
                },
                "201": {
                    "start": {
                        "line": 822,
                        "column": 12
                    },
                    "end": {
                        "line": 822,
                        "column": 65
                    }
                },
                "202": {
                    "start": {
                        "line": 824,
                        "column": 3
                    },
                    "end": {
                        "line": 824,
                        "column": 33
                    }
                },
                "203": {
                    "start": {
                        "line": 834,
                        "column": 12
                    },
                    "end": {
                        "line": 834,
                        "column": 39
                    }
                },
                "204": {
                    "start": {
                        "line": 835,
                        "column": 3
                    },
                    "end": {
                        "line": 835,
                        "column": 23
                    }
                },
                "205": {
                    "start": {
                        "line": 836,
                        "column": 3
                    },
                    "end": {
                        "line": 836,
                        "column": 28
                    }
                },
                "206": {
                    "start": {
                        "line": 846,
                        "column": 12
                    },
                    "end": {
                        "line": 846,
                        "column": 48
                    }
                },
                "207": {
                    "start": {
                        "line": 847,
                        "column": 12
                    },
                    "end": {
                        "line": 847,
                        "column": 51
                    }
                },
                "208": {
                    "start": {
                        "line": 859,
                        "column": 3
                    },
                    "end": {
                        "line": 861,
                        "column": 15
                    }
                },
                "209": {
                    "start": {
                        "line": 862,
                        "column": 3
                    },
                    "end": {
                        "line": 862,
                        "column": 25
                    }
                },
                "210": {
                    "start": {
                        "line": 863,
                        "column": 3
                    },
                    "end": {
                        "line": 870,
                        "column": 4
                    }
                },
                "211": {
                    "start": {
                        "line": 864,
                        "column": 4
                    },
                    "end": {
                        "line": 869,
                        "column": 7
                    }
                },
                "212": {
                    "start": {
                        "line": 865,
                        "column": 5
                    },
                    "end": {
                        "line": 865,
                        "column": 36
                    }
                },
                "213": {
                    "start": {
                        "line": 866,
                        "column": 5
                    },
                    "end": {
                        "line": 866,
                        "column": 47
                    }
                },
                "214": {
                    "start": {
                        "line": 867,
                        "column": 5
                    },
                    "end": {
                        "line": 867,
                        "column": 29
                    }
                },
                "215": {
                    "start": {
                        "line": 868,
                        "column": 5
                    },
                    "end": {
                        "line": 868,
                        "column": 16
                    }
                },
                "216": {
                    "start": {
                        "line": 879,
                        "column": 12
                    },
                    "end": {
                        "line": 879,
                        "column": 86
                    }
                },
                "217": {
                    "start": {
                        "line": 880,
                        "column": 12
                    },
                    "end": {
                        "line": 882,
                        "column": 13
                    }
                },
                "218": {
                    "start": {
                        "line": 881,
                        "column": 16
                    },
                    "end": {
                        "line": 881,
                        "column": 38
                    }
                },
                "219": {
                    "start": {
                        "line": 895,
                        "column": 3
                    },
                    "end": {
                        "line": 895,
                        "column": 41
                    }
                },
                "220": {
                    "start": {
                        "line": 907,
                        "column": 3
                    },
                    "end": {
                        "line": 914,
                        "column": 54
                    }
                },
                "221": {
                    "start": {
                        "line": 916,
                        "column": 3
                    },
                    "end": {
                        "line": 916,
                        "column": 26
                    }
                },
                "222": {
                    "start": {
                        "line": 917,
                        "column": 3
                    },
                    "end": {
                        "line": 920,
                        "column": 4
                    }
                },
                "223": {
                    "start": {
                        "line": 918,
                        "column": 4
                    },
                    "end": {
                        "line": 918,
                        "column": 24
                    }
                },
                "224": {
                    "start": {
                        "line": 919,
                        "column": 4
                    },
                    "end": {
                        "line": 919,
                        "column": 11
                    }
                },
                "225": {
                    "start": {
                        "line": 921,
                        "column": 3
                    },
                    "end": {
                        "line": 933,
                        "column": 13
                    }
                },
                "226": {
                    "start": {
                        "line": 922,
                        "column": 16
                    },
                    "end": {
                        "line": 931,
                        "column": 17
                    }
                },
                "227": {
                    "start": {
                        "line": 923,
                        "column": 20
                    },
                    "end": {
                        "line": 930,
                        "column": 21
                    }
                },
                "228": {
                    "start": {
                        "line": 924,
                        "column": 24
                    },
                    "end": {
                        "line": 926,
                        "column": 25
                    }
                },
                "229": {
                    "start": {
                        "line": 925,
                        "column": 28
                    },
                    "end": {
                        "line": 925,
                        "column": 51
                    }
                },
                "230": {
                    "start": {
                        "line": 927,
                        "column": 24
                    },
                    "end": {
                        "line": 927,
                        "column": 53
                    }
                },
                "231": {
                    "start": {
                        "line": 929,
                        "column": 24
                    },
                    "end": {
                        "line": 929,
                        "column": 53
                    }
                },
                "232": {
                    "start": {
                        "line": 932,
                        "column": 16
                    },
                    "end": {
                        "line": 932,
                        "column": 55
                    }
                },
                "233": {
                    "start": {
                        "line": 941,
                        "column": 3
                    },
                    "end": {
                        "line": 942,
                        "column": 22
                    }
                },
                "234": {
                    "start": {
                        "line": 943,
                        "column": 3
                    },
                    "end": {
                        "line": 943,
                        "column": 104
                    }
                },
                "235": {
                    "start": {
                        "line": 944,
                        "column": 3
                    },
                    "end": {
                        "line": 944,
                        "column": 84
                    }
                },
                "236": {
                    "start": {
                        "line": 954,
                        "column": 3
                    },
                    "end": {
                        "line": 957,
                        "column": 39
                    }
                },
                "237": {
                    "start": {
                        "line": 959,
                        "column": 3
                    },
                    "end": {
                        "line": 966,
                        "column": 4
                    }
                },
                "238": {
                    "start": {
                        "line": 961,
                        "column": 4
                    },
                    "end": {
                        "line": 961,
                        "column": 30
                    }
                },
                "239": {
                    "start": {
                        "line": 962,
                        "column": 4
                    },
                    "end": {
                        "line": 962,
                        "column": 27
                    }
                },
                "240": {
                    "start": {
                        "line": 963,
                        "column": 4
                    },
                    "end": {
                        "line": 963,
                        "column": 27
                    }
                },
                "241": {
                    "start": {
                        "line": 965,
                        "column": 4
                    },
                    "end": {
                        "line": 965,
                        "column": 24
                    }
                },
                "242": {
                    "start": {
                        "line": 968,
                        "column": 3
                    },
                    "end": {
                        "line": 968,
                        "column": 122
                    }
                },
                "243": {
                    "start": {
                        "line": 979,
                        "column": 3
                    },
                    "end": {
                        "line": 981,
                        "column": 42
                    }
                },
                "244": {
                    "start": {
                        "line": 982,
                        "column": 3
                    },
                    "end": {
                        "line": 982,
                        "column": 34
                    }
                },
                "245": {
                    "start": {
                        "line": 983,
                        "column": 3
                    },
                    "end": {
                        "line": 985,
                        "column": 6
                    }
                },
                "246": {
                    "start": {
                        "line": 984,
                        "column": 4
                    },
                    "end": {
                        "line": 984,
                        "column": 57
                    }
                },
                "247": {
                    "start": {
                        "line": 986,
                        "column": 12
                    },
                    "end": {
                        "line": 986,
                        "column": 83
                    }
                },
                "248": {
                    "start": {
                        "line": 987,
                        "column": 12
                    },
                    "end": {
                        "line": 987,
                        "column": 26
                    }
                },
                "249": {
                    "start": {
                        "line": 996,
                        "column": 12
                    },
                    "end": {
                        "line": 997,
                        "column": 36
                    }
                },
                "250": {
                    "start": {
                        "line": 999,
                        "column": 12
                    },
                    "end": {
                        "line": 999,
                        "column": 33
                    }
                },
                "251": {
                    "start": {
                        "line": 1000,
                        "column": 3
                    },
                    "end": {
                        "line": 1000,
                        "column": 15
                    }
                },
                "252": {
                    "start": {
                        "line": 1010,
                        "column": 12
                    },
                    "end": {
                        "line": 1010,
                        "column": 28
                    }
                },
                "253": {
                    "start": {
                        "line": 1011,
                        "column": 3
                    },
                    "end": {
                        "line": 1011,
                        "column": 32
                    }
                },
                "254": {
                    "start": {
                        "line": 1012,
                        "column": 3
                    },
                    "end": {
                        "line": 1012,
                        "column": 15
                    }
                },
                "255": {
                    "start": {
                        "line": 1022,
                        "column": 3
                    },
                    "end": {
                        "line": 1022,
                        "column": 35
                    }
                },
                "256": {
                    "start": {
                        "line": 1023,
                        "column": 3
                    },
                    "end": {
                        "line": 1023,
                        "column": 59
                    }
                },
                "257": {
                    "start": {
                        "line": 1033,
                        "column": 3
                    },
                    "end": {
                        "line": 1035,
                        "column": 46
                    }
                },
                "258": {
                    "start": {
                        "line": 1036,
                        "column": 3
                    },
                    "end": {
                        "line": 1038,
                        "column": 4
                    }
                },
                "259": {
                    "start": {
                        "line": 1037,
                        "column": 4
                    },
                    "end": {
                        "line": 1037,
                        "column": 16
                    }
                },
                "260": {
                    "start": {
                        "line": 1039,
                        "column": 3
                    },
                    "end": {
                        "line": 1039,
                        "column": 56
                    }
                },
                "261": {
                    "start": {
                        "line": 1049,
                        "column": 3
                    },
                    "end": {
                        "line": 1051,
                        "column": 46
                    }
                },
                "262": {
                    "start": {
                        "line": 1052,
                        "column": 3
                    },
                    "end": {
                        "line": 1054,
                        "column": 4
                    }
                },
                "263": {
                    "start": {
                        "line": 1053,
                        "column": 4
                    },
                    "end": {
                        "line": 1053,
                        "column": 16
                    }
                },
                "264": {
                    "start": {
                        "line": 1055,
                        "column": 3
                    },
                    "end": {
                        "line": 1055,
                        "column": 56
                    }
                },
                "265": {
                    "start": {
                        "line": 1063,
                        "column": 12
                    },
                    "end": {
                        "line": 1063,
                        "column": 49
                    }
                },
                "266": {
                    "start": {
                        "line": 1071,
                        "column": 12
                    },
                    "end": {
                        "line": 1071,
                        "column": 49
                    }
                },
                "267": {
                    "start": {
                        "line": 1079,
                        "column": 3
                    },
                    "end": {
                        "line": 1079,
                        "column": 50
                    }
                },
                "268": {
                    "start": {
                        "line": 1087,
                        "column": 12
                    },
                    "end": {
                        "line": 1087,
                        "column": 44
                    }
                },
                "269": {
                    "start": {
                        "line": 1095,
                        "column": 12
                    },
                    "end": {
                        "line": 1095,
                        "column": 45
                    }
                },
                "270": {
                    "start": {
                        "line": 1103,
                        "column": 3
                    },
                    "end": {
                        "line": 1103,
                        "column": 43
                    }
                },
                "271": {
                    "start": {
                        "line": 1115,
                        "column": 3
                    },
                    "end": {
                        "line": 1115,
                        "column": 27
                    }
                },
                "272": {
                    "start": {
                        "line": 1116,
                        "column": 3
                    },
                    "end": {
                        "line": 1118,
                        "column": 4
                    }
                },
                "273": {
                    "start": {
                        "line": 1117,
                        "column": 4
                    },
                    "end": {
                        "line": 1117,
                        "column": 40
                    }
                },
                "274": {
                    "start": {
                        "line": 1119,
                        "column": 3
                    },
                    "end": {
                        "line": 1121,
                        "column": 4
                    }
                },
                "275": {
                    "start": {
                        "line": 1120,
                        "column": 4
                    },
                    "end": {
                        "line": 1120,
                        "column": 23
                    }
                },
                "276": {
                    "start": {
                        "line": 1122,
                        "column": 3
                    },
                    "end": {
                        "line": 1122,
                        "column": 39
                    }
                },
                "277": {
                    "start": {
                        "line": 1135,
                        "column": 3
                    },
                    "end": {
                        "line": 1135,
                        "column": 27
                    }
                },
                "278": {
                    "start": {
                        "line": 1136,
                        "column": 3
                    },
                    "end": {
                        "line": 1140,
                        "column": 4
                    }
                },
                "279": {
                    "start": {
                        "line": 1137,
                        "column": 4
                    },
                    "end": {
                        "line": 1137,
                        "column": 40
                    }
                },
                "280": {
                    "start": {
                        "line": 1139,
                        "column": 4
                    },
                    "end": {
                        "line": 1139,
                        "column": 24
                    }
                },
                "281": {
                    "start": {
                        "line": 1255,
                        "column": 5
                    },
                    "end": {
                        "line": 1255,
                        "column": 23
                    }
                },
                "282": {
                    "start": {
                        "line": 1291,
                        "column": 20
                    },
                    "end": {
                        "line": 1291,
                        "column": 49
                    }
                },
                "283": {
                    "start": {
                        "line": 1305,
                        "column": 5
                    },
                    "end": {
                        "line": 1306,
                        "column": 26
                    }
                },
                "284": {
                    "start": {
                        "line": 1307,
                        "column": 5
                    },
                    "end": {
                        "line": 1310,
                        "column": 6
                    }
                },
                "285": {
                    "start": {
                        "line": 1308,
                        "column": 6
                    },
                    "end": {
                        "line": 1308,
                        "column": 17
                    }
                },
                "286": {
                    "start": {
                        "line": 1309,
                        "column": 6
                    },
                    "end": {
                        "line": 1309,
                        "column": 28
                    }
                },
                "287": {
                    "start": {
                        "line": 1311,
                        "column": 5
                    },
                    "end": {
                        "line": 1311,
                        "column": 20
                    }
                },
                "288": {
                    "start": {
                        "line": 1326,
                        "column": 0
                    },
                    "end": {
                        "line": 1326,
                        "column": 29
                    }
                }
            },
            "branchMap": {
                "1": {
                    "line": 203,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 203,
                                "column": 16
                            },
                            "end": {
                                "line": 203,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 203,
                                "column": 16
                            },
                            "end": {
                                "line": 203,
                                "column": 16
                            }
                        }
                    ]
                },
                "2": {
                    "line": 207,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 207,
                                "column": 16
                            },
                            "end": {
                                "line": 207,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 207,
                                "column": 16
                            },
                            "end": {
                                "line": 207,
                                "column": 16
                            }
                        }
                    ]
                },
                "3": {
                    "line": 211,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 211,
                                "column": 27
                            },
                            "end": {
                                "line": 211,
                                "column": 35
                            }
                        },
                        {
                            "start": {
                                "line": 211,
                                "column": 39
                            },
                            "end": {
                                "line": 211,
                                "column": 47
                            }
                        }
                    ]
                },
                "4": {
                    "line": 212,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 212,
                                "column": 16
                            },
                            "end": {
                                "line": 212,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 212,
                                "column": 16
                            },
                            "end": {
                                "line": 212,
                                "column": 16
                            }
                        }
                    ]
                },
                "5": {
                    "line": 212,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 212,
                                "column": 20
                            },
                            "end": {
                                "line": 212,
                                "column": 27
                            }
                        },
                        {
                            "start": {
                                "line": 212,
                                "column": 31
                            },
                            "end": {
                                "line": 212,
                                "column": 46
                            }
                        }
                    ]
                },
                "6": {
                    "line": 215,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 215,
                                "column": 37
                            },
                            "end": {
                                "line": 215,
                                "column": 67
                            }
                        },
                        {
                            "start": {
                                "line": 215,
                                "column": 71
                            },
                            "end": {
                                "line": 215,
                                "column": 87
                            }
                        }
                    ]
                },
                "7": {
                    "line": 242,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 242,
                                "column": 12
                            },
                            "end": {
                                "line": 242,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 242,
                                "column": 12
                            },
                            "end": {
                                "line": 242,
                                "column": 12
                            }
                        }
                    ]
                },
                "8": {
                    "line": 265,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 265,
                                "column": 12
                            },
                            "end": {
                                "line": 265,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 265,
                                "column": 12
                            },
                            "end": {
                                "line": 265,
                                "column": 12
                            }
                        }
                    ]
                },
                "9": {
                    "line": 265,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 265,
                                "column": 16
                            },
                            "end": {
                                "line": 265,
                                "column": 18
                            }
                        },
                        {
                            "start": {
                                "line": 265,
                                "column": 22
                            },
                            "end": {
                                "line": 265,
                                "column": 33
                            }
                        }
                    ]
                },
                "10": {
                    "line": 283,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 283,
                                "column": 16
                            },
                            "end": {
                                "line": 283,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 283,
                                "column": 16
                            },
                            "end": {
                                "line": 283,
                                "column": 16
                            }
                        }
                    ]
                },
                "11": {
                    "line": 283,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 283,
                                "column": 20
                            },
                            "end": {
                                "line": 283,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 283,
                                "column": 38
                            },
                            "end": {
                                "line": 283,
                                "column": 53
                            }
                        }
                    ]
                },
                "12": {
                    "line": 296,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 296,
                                "column": 16
                            },
                            "end": {
                                "line": 296,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 296,
                                "column": 16
                            },
                            "end": {
                                "line": 296,
                                "column": 16
                            }
                        }
                    ]
                },
                "13": {
                    "line": 296,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 296,
                                "column": 20
                            },
                            "end": {
                                "line": 296,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 296,
                                "column": 38
                            },
                            "end": {
                                "line": 296,
                                "column": 52
                            }
                        }
                    ]
                },
                "14": {
                    "line": 316,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 316,
                                "column": 12
                            },
                            "end": {
                                "line": 316,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 316,
                                "column": 12
                            },
                            "end": {
                                "line": 316,
                                "column": 12
                            }
                        }
                    ]
                },
                "15": {
                    "line": 318,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 318,
                                "column": 19
                            },
                            "end": {
                                "line": 318,
                                "column": 19
                            }
                        },
                        {
                            "start": {
                                "line": 318,
                                "column": 19
                            },
                            "end": {
                                "line": 318,
                                "column": 19
                            }
                        }
                    ]
                },
                "16": {
                    "line": 326,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 326,
                                "column": 16
                            },
                            "end": {
                                "line": 326,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 326,
                                "column": 16
                            },
                            "end": {
                                "line": 326,
                                "column": 16
                            }
                        }
                    ]
                },
                "17": {
                    "line": 345,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 345,
                                "column": 12
                            },
                            "end": {
                                "line": 345,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 345,
                                "column": 12
                            },
                            "end": {
                                "line": 345,
                                "column": 12
                            }
                        }
                    ]
                },
                "18": {
                    "line": 359,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 359,
                                "column": 12
                            },
                            "end": {
                                "line": 359,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 359,
                                "column": 12
                            },
                            "end": {
                                "line": 359,
                                "column": 12
                            }
                        }
                    ]
                },
                "19": {
                    "line": 362,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 362,
                                "column": 12
                            },
                            "end": {
                                "line": 362,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 362,
                                "column": 12
                            },
                            "end": {
                                "line": 362,
                                "column": 12
                            }
                        }
                    ]
                },
                "20": {
                    "line": 366,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 366,
                                "column": 12
                            },
                            "end": {
                                "line": 366,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 366,
                                "column": 12
                            },
                            "end": {
                                "line": 366,
                                "column": 12
                            }
                        }
                    ]
                },
                "21": {
                    "line": 387,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 387,
                                "column": 12
                            },
                            "end": {
                                "line": 387,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 387,
                                "column": 12
                            },
                            "end": {
                                "line": 387,
                                "column": 12
                            }
                        }
                    ]
                },
                "22": {
                    "line": 389,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 389,
                                "column": 16
                            },
                            "end": {
                                "line": 389,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 389,
                                "column": 16
                            },
                            "end": {
                                "line": 389,
                                "column": 16
                            }
                        }
                    ]
                },
                "23": {
                    "line": 392,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 392,
                                "column": 16
                            },
                            "end": {
                                "line": 392,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 392,
                                "column": 16
                            },
                            "end": {
                                "line": 392,
                                "column": 16
                            }
                        }
                    ]
                },
                "24": {
                    "line": 399,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 399,
                                "column": 31
                            },
                            "end": {
                                "line": 399,
                                "column": 46
                            }
                        },
                        {
                            "start": {
                                "line": 399,
                                "column": 50
                            },
                            "end": {
                                "line": 399,
                                "column": 51
                            }
                        }
                    ]
                },
                "25": {
                    "line": 415,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 415,
                                "column": 12
                            },
                            "end": {
                                "line": 415,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 415,
                                "column": 12
                            },
                            "end": {
                                "line": 415,
                                "column": 12
                            }
                        }
                    ]
                },
                "26": {
                    "line": 421,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 421,
                                "column": 12
                            },
                            "end": {
                                "line": 421,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 421,
                                "column": 12
                            },
                            "end": {
                                "line": 421,
                                "column": 12
                            }
                        }
                    ]
                },
                "27": {
                    "line": 436,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 436,
                                "column": 23
                            },
                            "end": {
                                "line": 436,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 436,
                                "column": 37
                            },
                            "end": {
                                "line": 436,
                                "column": 60
                            }
                        }
                    ]
                },
                "28": {
                    "line": 437,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 437,
                                "column": 12
                            },
                            "end": {
                                "line": 437,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 437,
                                "column": 12
                            },
                            "end": {
                                "line": 437,
                                "column": 12
                            }
                        }
                    ]
                },
                "29": {
                    "line": 440,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 440,
                                "column": 12
                            },
                            "end": {
                                "line": 440,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 440,
                                "column": 12
                            },
                            "end": {
                                "line": 440,
                                "column": 12
                            }
                        }
                    ]
                },
                "30": {
                    "line": 442,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 442,
                                "column": 16
                            },
                            "end": {
                                "line": 442,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 442,
                                "column": 16
                            },
                            "end": {
                                "line": 442,
                                "column": 16
                            }
                        }
                    ]
                },
                "31": {
                    "line": 476,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 476,
                                "column": 20
                            },
                            "end": {
                                "line": 476,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 476,
                                "column": 20
                            },
                            "end": {
                                "line": 476,
                                "column": 20
                            }
                        }
                    ]
                },
                "32": {
                    "line": 480,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 480,
                                "column": 20
                            },
                            "end": {
                                "line": 480,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 480,
                                "column": 20
                            },
                            "end": {
                                "line": 480,
                                "column": 20
                            }
                        }
                    ]
                },
                "33": {
                    "line": 485,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 485,
                                "column": 12
                            },
                            "end": {
                                "line": 485,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 485,
                                "column": 12
                            },
                            "end": {
                                "line": 485,
                                "column": 12
                            }
                        }
                    ]
                },
                "34": {
                    "line": 499,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 499,
                                "column": 12
                            },
                            "end": {
                                "line": 499,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 499,
                                "column": 12
                            },
                            "end": {
                                "line": 499,
                                "column": 12
                            }
                        }
                    ]
                },
                "35": {
                    "line": 517,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 517,
                                "column": 20
                            },
                            "end": {
                                "line": 517,
                                "column": 25
                            }
                        },
                        {
                            "start": {
                                "line": 517,
                                "column": 29
                            },
                            "end": {
                                "line": 517,
                                "column": 33
                            }
                        }
                    ]
                },
                "36": {
                    "line": 519,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 519,
                                "column": 35
                            },
                            "end": {
                                "line": 519,
                                "column": 49
                            }
                        },
                        {
                            "start": {
                                "line": 519,
                                "column": 53
                            },
                            "end": {
                                "line": 519,
                                "column": 55
                            }
                        }
                    ]
                },
                "37": {
                    "line": 520,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 520,
                                "column": 20
                            },
                            "end": {
                                "line": 520,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 520,
                                "column": 20
                            },
                            "end": {
                                "line": 520,
                                "column": 20
                            }
                        }
                    ]
                },
                "38": {
                    "line": 540,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 540,
                                "column": 20
                            },
                            "end": {
                                "line": 540,
                                "column": 25
                            }
                        },
                        {
                            "start": {
                                "line": 540,
                                "column": 29
                            },
                            "end": {
                                "line": 540,
                                "column": 33
                            }
                        }
                    ]
                },
                "39": {
                    "line": 545,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 545,
                                "column": 24
                            },
                            "end": {
                                "line": 545,
                                "column": 24
                            }
                        },
                        {
                            "start": {
                                "line": 545,
                                "column": 24
                            },
                            "end": {
                                "line": 545,
                                "column": 24
                            }
                        }
                    ]
                },
                "40": {
                    "line": 572,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 572,
                                "column": 12
                            },
                            "end": {
                                "line": 572,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 572,
                                "column": 12
                            },
                            "end": {
                                "line": 572,
                                "column": 12
                            }
                        }
                    ]
                },
                "41": {
                    "line": 572,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 572,
                                "column": 16
                            },
                            "end": {
                                "line": 572,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 572,
                                "column": 26
                            },
                            "end": {
                                "line": 572,
                                "column": 62
                            }
                        }
                    ]
                },
                "42": {
                    "line": 573,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 573,
                                "column": 38
                            },
                            "end": {
                                "line": 573,
                                "column": 50
                            }
                        },
                        {
                            "start": {
                                "line": 573,
                                "column": 51
                            },
                            "end": {
                                "line": 573,
                                "column": 73
                            }
                        }
                    ]
                },
                "43": {
                    "line": 592,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 592,
                                "column": 20
                            },
                            "end": {
                                "line": 592,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 592,
                                "column": 20
                            },
                            "end": {
                                "line": 592,
                                "column": 20
                            }
                        }
                    ]
                },
                "44": {
                    "line": 592,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 592,
                                "column": 24
                            },
                            "end": {
                                "line": 592,
                                "column": 29
                            }
                        },
                        {
                            "start": {
                                "line": 592,
                                "column": 33
                            },
                            "end": {
                                "line": 592,
                                "column": 46
                            }
                        }
                    ]
                },
                "45": {
                    "line": 598,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 598,
                                "column": 12
                            },
                            "end": {
                                "line": 598,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 598,
                                "column": 12
                            },
                            "end": {
                                "line": 598,
                                "column": 12
                            }
                        }
                    ]
                },
                "46": {
                    "line": 598,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 598,
                                "column": 16
                            },
                            "end": {
                                "line": 598,
                                "column": 21
                            }
                        },
                        {
                            "start": {
                                "line": 598,
                                "column": 25
                            },
                            "end": {
                                "line": 598,
                                "column": 44
                            }
                        }
                    ]
                },
                "47": {
                    "line": 625,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 625,
                                "column": 12
                            },
                            "end": {
                                "line": 625,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 625,
                                "column": 12
                            },
                            "end": {
                                "line": 625,
                                "column": 12
                            }
                        }
                    ]
                },
                "48": {
                    "line": 625,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 625,
                                "column": 16
                            },
                            "end": {
                                "line": 625,
                                "column": 39
                            }
                        },
                        {
                            "start": {
                                "line": 625,
                                "column": 44
                            },
                            "end": {
                                "line": 625,
                                "column": 58
                            }
                        }
                    ]
                },
                "49": {
                    "line": 628,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 628,
                                "column": 12
                            },
                            "end": {
                                "line": 628,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 628,
                                "column": 12
                            },
                            "end": {
                                "line": 628,
                                "column": 12
                            }
                        }
                    ]
                },
                "50": {
                    "line": 630,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 630,
                                "column": 20
                            },
                            "end": {
                                "line": 630,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 630,
                                "column": 20
                            },
                            "end": {
                                "line": 630,
                                "column": 20
                            }
                        }
                    ]
                },
                "51": {
                    "line": 756,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 756,
                                "column": 21
                            },
                            "end": {
                                "line": 756,
                                "column": 23
                            }
                        },
                        {
                            "start": {
                                "line": 756,
                                "column": 27
                            },
                            "end": {
                                "line": 756,
                                "column": 43
                            }
                        }
                    ]
                },
                "52": {
                    "line": 757,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 757,
                                "column": 21
                            },
                            "end": {
                                "line": 757,
                                "column": 23
                            }
                        },
                        {
                            "start": {
                                "line": 757,
                                "column": 27
                            },
                            "end": {
                                "line": 757,
                                "column": 43
                            }
                        }
                    ]
                },
                "53": {
                    "line": 784,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 784,
                                "column": 17
                            },
                            "end": {
                                "line": 784,
                                "column": 31
                            }
                        },
                        {
                            "start": {
                                "line": 784,
                                "column": 35
                            },
                            "end": {
                                "line": 784,
                                "column": 56
                            }
                        }
                    ]
                },
                "54": {
                    "line": 788,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 788,
                                "column": 21
                            },
                            "end": {
                                "line": 788,
                                "column": 41
                            }
                        },
                        {
                            "start": {
                                "line": 788,
                                "column": 45
                            },
                            "end": {
                                "line": 788,
                                "column": 76
                            }
                        }
                    ]
                },
                "55": {
                    "line": 789,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 789,
                                "column": 21
                            },
                            "end": {
                                "line": 789,
                                "column": 41
                            }
                        },
                        {
                            "start": {
                                "line": 789,
                                "column": 45
                            },
                            "end": {
                                "line": 789,
                                "column": 76
                            }
                        }
                    ]
                },
                "56": {
                    "line": 794,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 794,
                                "column": 3
                            },
                            "end": {
                                "line": 794,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 794,
                                "column": 3
                            },
                            "end": {
                                "line": 794,
                                "column": 3
                            }
                        }
                    ]
                },
                "57": {
                    "line": 795,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 795,
                                "column": 4
                            },
                            "end": {
                                "line": 795,
                                "column": 4
                            }
                        },
                        {
                            "start": {
                                "line": 795,
                                "column": 4
                            },
                            "end": {
                                "line": 795,
                                "column": 4
                            }
                        }
                    ]
                },
                "58": {
                    "line": 805,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 805,
                                "column": 4
                            },
                            "end": {
                                "line": 805,
                                "column": 4
                            }
                        },
                        {
                            "start": {
                                "line": 805,
                                "column": 4
                            },
                            "end": {
                                "line": 805,
                                "column": 4
                            }
                        }
                    ]
                },
                "59": {
                    "line": 805,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 805,
                                "column": 8
                            },
                            "end": {
                                "line": 805,
                                "column": 38
                            }
                        },
                        {
                            "start": {
                                "line": 805,
                                "column": 42
                            },
                            "end": {
                                "line": 805,
                                "column": 55
                            }
                        }
                    ]
                },
                "60": {
                    "line": 811,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 811,
                                "column": 3
                            },
                            "end": {
                                "line": 811,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 811,
                                "column": 3
                            },
                            "end": {
                                "line": 811,
                                "column": 3
                            }
                        }
                    ]
                },
                "61": {
                    "line": 814,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 814,
                                "column": 3
                            },
                            "end": {
                                "line": 814,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 814,
                                "column": 3
                            },
                            "end": {
                                "line": 814,
                                "column": 3
                            }
                        }
                    ]
                },
                "62": {
                    "line": 817,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 817,
                                "column": 12
                            },
                            "end": {
                                "line": 817,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 817,
                                "column": 12
                            },
                            "end": {
                                "line": 817,
                                "column": 12
                            }
                        }
                    ]
                },
                "63": {
                    "line": 822,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 822,
                                "column": 60
                            },
                            "end": {
                                "line": 822,
                                "column": 61
                            }
                        },
                        {
                            "start": {
                                "line": 822,
                                "column": 62
                            },
                            "end": {
                                "line": 822,
                                "column": 64
                            }
                        }
                    ]
                },
                "64": {
                    "line": 847,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 847,
                                "column": 22
                            },
                            "end": {
                                "line": 847,
                                "column": 30
                            }
                        },
                        {
                            "start": {
                                "line": 847,
                                "column": 34
                            },
                            "end": {
                                "line": 847,
                                "column": 49
                            }
                        }
                    ]
                },
                "65": {
                    "line": 862,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 862,
                                "column": 11
                            },
                            "end": {
                                "line": 862,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 862,
                                "column": 20
                            },
                            "end": {
                                "line": 862,
                                "column": 24
                            }
                        }
                    ]
                },
                "66": {
                    "line": 863,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 863,
                                "column": 3
                            },
                            "end": {
                                "line": 863,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 863,
                                "column": 3
                            },
                            "end": {
                                "line": 863,
                                "column": 3
                            }
                        }
                    ]
                },
                "67": {
                    "line": 863,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 863,
                                "column": 7
                            },
                            "end": {
                                "line": 863,
                                "column": 15
                            }
                        },
                        {
                            "start": {
                                "line": 863,
                                "column": 19
                            },
                            "end": {
                                "line": 863,
                                "column": 34
                            }
                        }
                    ]
                },
                "68": {
                    "line": 880,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 880,
                                "column": 12
                            },
                            "end": {
                                "line": 880,
                                "column": 12
                            }
                        },
                        {
                            "start": {
                                "line": 880,
                                "column": 12
                            },
                            "end": {
                                "line": 880,
                                "column": 12
                            }
                        }
                    ]
                },
                "69": {
                    "line": 917,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 917,
                                "column": 3
                            },
                            "end": {
                                "line": 917,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 917,
                                "column": 3
                            },
                            "end": {
                                "line": 917,
                                "column": 3
                            }
                        }
                    ]
                },
                "70": {
                    "line": 917,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 917,
                                "column": 7
                            },
                            "end": {
                                "line": 917,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 917,
                                "column": 20
                            },
                            "end": {
                                "line": 917,
                                "column": 33
                            }
                        },
                        {
                            "start": {
                                "line": 917,
                                "column": 38
                            },
                            "end": {
                                "line": 917,
                                "column": 53
                            }
                        },
                        {
                            "start": {
                                "line": 917,
                                "column": 58
                            },
                            "end": {
                                "line": 917,
                                "column": 80
                            }
                        }
                    ]
                },
                "71": {
                    "line": 921,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 921,
                                "column": 3
                            },
                            "end": {
                                "line": 921,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 921,
                                "column": 3
                            },
                            "end": {
                                "line": 921,
                                "column": 3
                            }
                        }
                    ]
                },
                "72": {
                    "line": 922,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 922,
                                "column": 16
                            },
                            "end": {
                                "line": 922,
                                "column": 16
                            }
                        },
                        {
                            "start": {
                                "line": 922,
                                "column": 16
                            },
                            "end": {
                                "line": 922,
                                "column": 16
                            }
                        }
                    ]
                },
                "73": {
                    "line": 922,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 922,
                                "column": 20
                            },
                            "end": {
                                "line": 922,
                                "column": 34
                            }
                        },
                        {
                            "start": {
                                "line": 922,
                                "column": 38
                            },
                            "end": {
                                "line": 922,
                                "column": 59
                            }
                        }
                    ]
                },
                "74": {
                    "line": 923,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 923,
                                "column": 20
                            },
                            "end": {
                                "line": 923,
                                "column": 20
                            }
                        },
                        {
                            "start": {
                                "line": 923,
                                "column": 20
                            },
                            "end": {
                                "line": 923,
                                "column": 20
                            }
                        }
                    ]
                },
                "75": {
                    "line": 924,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 924,
                                "column": 24
                            },
                            "end": {
                                "line": 924,
                                "column": 24
                            }
                        },
                        {
                            "start": {
                                "line": 924,
                                "column": 24
                            },
                            "end": {
                                "line": 924,
                                "column": 24
                            }
                        }
                    ]
                },
                "76": {
                    "line": 959,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 959,
                                "column": 3
                            },
                            "end": {
                                "line": 959,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 959,
                                "column": 3
                            },
                            "end": {
                                "line": 959,
                                "column": 3
                            }
                        }
                    ]
                },
                "77": {
                    "line": 968,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 968,
                                "column": 74
                            },
                            "end": {
                                "line": 968,
                                "column": 97
                            }
                        },
                        {
                            "start": {
                                "line": 968,
                                "column": 98
                            },
                            "end": {
                                "line": 968,
                                "column": 119
                            }
                        }
                    ]
                },
                "78": {
                    "line": 986,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 986,
                                "column": 17
                            },
                            "end": {
                                "line": 986,
                                "column": 19
                            }
                        },
                        {
                            "start": {
                                "line": 986,
                                "column": 23
                            },
                            "end": {
                                "line": 986,
                                "column": 82
                            }
                        }
                    ]
                },
                "79": {
                    "line": 1023,
                    "type": "cond-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1023,
                                "column": 17
                            },
                            "end": {
                                "line": 1023,
                                "column": 52
                            }
                        },
                        {
                            "start": {
                                "line": 1023,
                                "column": 53
                            },
                            "end": {
                                "line": 1023,
                                "column": 57
                            }
                        }
                    ]
                },
                "80": {
                    "line": 1034,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1034,
                                "column": 16
                            },
                            "end": {
                                "line": 1034,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1034,
                                "column": 26
                            },
                            "end": {
                                "line": 1034,
                                "column": 41
                            }
                        },
                        {
                            "start": {
                                "line": 1034,
                                "column": 46
                            },
                            "end": {
                                "line": 1034,
                                "column": 48
                            }
                        }
                    ]
                },
                "81": {
                    "line": 1036,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1036,
                                "column": 3
                            },
                            "end": {
                                "line": 1036,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 1036,
                                "column": 3
                            },
                            "end": {
                                "line": 1036,
                                "column": 3
                            }
                        }
                    ]
                },
                "82": {
                    "line": 1036,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1036,
                                "column": 7
                            },
                            "end": {
                                "line": 1036,
                                "column": 18
                            }
                        },
                        {
                            "start": {
                                "line": 1036,
                                "column": 22
                            },
                            "end": {
                                "line": 1036,
                                "column": 46
                            }
                        }
                    ]
                },
                "83": {
                    "line": 1050,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1050,
                                "column": 16
                            },
                            "end": {
                                "line": 1050,
                                "column": 22
                            }
                        },
                        {
                            "start": {
                                "line": 1050,
                                "column": 26
                            },
                            "end": {
                                "line": 1050,
                                "column": 41
                            }
                        },
                        {
                            "start": {
                                "line": 1050,
                                "column": 46
                            },
                            "end": {
                                "line": 1050,
                                "column": 48
                            }
                        }
                    ]
                },
                "84": {
                    "line": 1052,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1052,
                                "column": 3
                            },
                            "end": {
                                "line": 1052,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 1052,
                                "column": 3
                            },
                            "end": {
                                "line": 1052,
                                "column": 3
                            }
                        }
                    ]
                },
                "85": {
                    "line": 1116,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1116,
                                "column": 3
                            },
                            "end": {
                                "line": 1116,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 1116,
                                "column": 3
                            },
                            "end": {
                                "line": 1116,
                                "column": 3
                            }
                        }
                    ]
                },
                "86": {
                    "line": 1116,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1116,
                                "column": 7
                            },
                            "end": {
                                "line": 1116,
                                "column": 42
                            }
                        },
                        {
                            "start": {
                                "line": 1116,
                                "column": 46
                            },
                            "end": {
                                "line": 1116,
                                "column": 52
                            }
                        }
                    ]
                },
                "87": {
                    "line": 1119,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1119,
                                "column": 3
                            },
                            "end": {
                                "line": 1119,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 1119,
                                "column": 3
                            },
                            "end": {
                                "line": 1119,
                                "column": 3
                            }
                        }
                    ]
                },
                "88": {
                    "line": 1136,
                    "type": "if",
                    "locations": [
                        {
                            "start": {
                                "line": 1136,
                                "column": 3
                            },
                            "end": {
                                "line": 1136,
                                "column": 3
                            }
                        },
                        {
                            "start": {
                                "line": 1136,
                                "column": 3
                            },
                            "end": {
                                "line": 1136,
                                "column": 3
                            }
                        }
                    ]
                },
                "89": {
                    "line": 1136,
                    "type": "binary-expr",
                    "locations": [
                        {
                            "start": {
                                "line": 1136,
                                "column": 7
                            },
                            "end": {
                                "line": 1136,
                                "column": 42
                            }
                        },
                        {
                            "start": {
                                "line": 1136,
                                "column": 46
                            },
                            "end": {
                                "line": 1136,
                                "column": 83
                            }
                        },
                        {
                            "start": {
                                "line": 1136,
                                "column": 87
                            },
                            "end": {
                                "line": 1136,
                                "column": 93
                            }
                        }
                    ]
                }
            },
            "code": [
                "(function () { YUI.add('gallery-flyweight-tree', function (Y, NAME) {",
                "",
                "/**",
                "* An implementation of the flyweight pattern for rendering tree-structured data.",
                "*",
                "* This module is made of two components, the manager and the nodes.",
                "* The manager, FlyweightTreeManager, holds a definition of the tree in an internal, private object",
                "* which is completely passive, with no methods, events or attributes.",
                "* This is the internal tree configuration and the nodes of that tree are called iNodes",
                "* for 'internal nodes'.",
                "*",
                "* When any action needs to be taken on any node, the manager takes a node instance",
                "* (an instance of FlyweightTreeNode or, more often, a subclass of it)",
                "* from the pool of instances, or creates one if none is available and slides it",
                "* on top of the iNode holding its state and then performs the action as if",
                "* the node instance had always been there.",
                "*",
                "* The manager is a subclass of Widget and contains the overall container for the tree.",
                "* Nodes are a subclass of Base and they are rendered from markup resulting of",
                "* processing its template with its attributes and several pre-defined placeholders.",
                "*",
                "* Nodes should not be instantiated directly but requested from the manager.",
                "* Nodes are automatically generated by the manager in response to events.",
                "* They are returned to the pool of nodes once the event listener return.",
                "* The user should not hold references to nodes provided to event listeners",
                "* or the callback of the tree traversal methods, since the manager will return",
                "* them to the pool.  If the user needs to keep a reference, the `hold` method",
                "* can be used to preserve it.",
                "* On the other hand, for methods that do return a permanent reference or",
                "* references marked as held, the user is responsible for calling `release`",
                "* when no longer required so that the manager can return them to the pool.",
                "*",
                "* @module gallery-flyweight-tree",
                "*/",
                "'use strict';",
                "/*jslint white: true */",
                "var Lang = Y.Lang,",
                "\tYArray = Y.Array,",
                "",
                "    DOT = '.',",
                "\tBYPASS_PROXY = \"_bypassProxy\",",
                "\tCBX = 'contentBox',",
                "\tVALUE = 'value',",
                "    EXPANDED = 'expanded',",
                "    DYNAMIC_LOADER = 'dynamicLoader',",
                "    TABINDEX = 'tabIndex',",
                "    FOCUSED = 'focused',",
                "",
                "    DEFAULT_POOL = '_default',",
                "",
                "    getCName = Y.ClassNameManager.getClassName,",
                "    FWNODE_NAME = 'flyweight-tree-node',",
                "\tcName = function (name) {",
                "\t\treturn getCName(FWNODE_NAME, name);",
                "\t},",
                "",
                "\tFWMgr,",
                "\tFWNode;",
                "",
                "/**",
                " * Widget to handle its child nodes by using the flyweight pattern.",
                " *",
                " * The information for the tree is stored internally in a plain object without methods,",
                " * events or attributes.",
                " * This manager will position FlyweightTreeNode instances (or subclasses of it)",
                " * over these iNodes from a small pool of them, in order to save memory.",
                " *",
                " * The nodes on this configuration tree are referred to in this documentation as `iNodes`",
                " * for 'internal nodes', to tell them apart from the pooled FlyweightTreeNode instances",
                " * that will be used to manipulate them.  The FlyweightTreeNode instances will usually",
                " * be declared as `fwNodes` when confusion might arise.",
                " * If a variable or argument is not explicitly named `iNode` or a related name it is",
                " * FlyweightTreeNode instance.",
                " *",
                " * The developer should not be concerned about the iNodes,",
                " * except in the initial configuration tree.",
                " * If the developer finds anything that needs to be done through iNodes,",
                " * it is a bug and should be reported (thanks).",
                " * iNodes should be private.",
                " *",
                " * @class FlyweightTreeManager",
                " * @extends Widget",
                " * @constructor",
                " */",
                "",
                "FWMgr = Y.Base.create(",
                "    NAME,",
                "    Y.Widget,",
                "    [],",
                "    {",
                "        /**",
                "         * Clone of the configuration tree.",
                "         * The FlyweightTreeNode instances will use the iNodes (internal nodes) in this tree as the storage for their state.",
                "         * @property _tree",
                "         * @type Object",
                "         * @private",
                "         */",
                "        _tree: null,",
                "        /**",
                "         * Pool of FlyweightTreeNode instances to use and reuse by the manager.",
                "         * It contains a hash of arrays indexed by the iNode (internal node) type.",
                "         * Each array contains a series of FlyweightTreeNode subclasses of the corresponding type.",
                "         * @property _pool",
                "         * @type {Object}",
                "         * @private",
                "         */",
                "        _pool: null,",
                "        /**",
                "         * List of dom events to be listened for at the outer container and fired again",
                "         * at the FlyweightTreeNode level once positioned over the source iNode.",
                "         *",
                "         * Since the node instances are not actually there, they can't listen to the events themselves",
                "         * so the events listed here will serve to wake up those instances and get the event",
                "         * as if they had been there all along.",
                "         * @property _domEvents",
                "         * @type Array of strings",
                "         * @protected",
                "         * @default null",
                "         */",
                "        _domEvents: null,",
                "        /**",
                "         * Reference to the element that has the focus or should have the focus",
                "         * when this widget is active (ie, tabbed into).",
                "         * Mostly used for WAI-ARIA support.",
                "         * @property _focusedINode",
                "         * @type FlyweightTreeNode",
                "         * @private",
                "         * @default null",
                "         */",
                "        _focusedINode: null,",
                "",
                "        /**",
                "         * Event handles of events subscribed to, to detach them on destroy",
                "         * @property _eventHandles",
                "         * @type Array of EventHandles",
                "         * @private",
                "         */",
                "        _eventHandles: null,",
                "",
                "        /**",
                "         * Part of the Widget lifecycle.",
                "         * @method initializer",
                "         * @protected",
                "         */",
                "        initializer:function () {",
                "            this._pool = {};",
                "            this._eventHandles = [];",
                "        },",
                "        /**",
                "         * Part of the lifecycle.  Destroys the pools.",
                "         * @method destructor",
                "         * @protected",
                "         */",
                "        destructor: function () {",
                "            YArray.each(this._pool, function (fwNode) {",
                "                fwNode.destroy();",
                "            });",
                "            this._pool = null;",
                "            YArray.each(this._eventHandles, function (evHandle) {",
                "                evHandle.detach();",
                "            });",
                "            this._eventHandles = null;",
                "",
                "        },",
                "        /**",
                "         * Method to load the configuration tree.",
                "         * The nodes in this tree are copied into iNodes (internal nodes) for internal use.",
                "         *",
                "         * The initializer does not load the tree automatically so as to allow the subclass",
                "         * of this manager",
                "         * to process the tree definition anyway it wants, adding defaults and such",
                "         * and to name the tree whatever is suitable.",
                "         * For TreeView, the configuration property is named `tree`, for a form, it is named `form`.",
                "         * It also sets initial values for some default properties such as `parent` references and `id` for all iNodes.",
                "         * @method _loadConfig",
                "         * @param tree {Array} Configuration for the first level of nodes.",
                "         * Contains objects with the following attributes:",
                "         * @param tree.label {String} Text or HTML markup to be shown in the node",
                "         * @param [tree.expanded=true] {Boolean} Whether the children of this node should be visible.",
                "         * @param [tree.children] {Array} Further definitions for the children of this node",
                "         * @param [tree.type=FWTreeNode] {FWTreeNode | String} Class used to create instances for this iNode.",
                "         * It can be a reference to an object or a name that can be resolved as `Y[name]`.",
                "         * @param [tree.id=Y.guid()] {String} Identifier to assign to the DOM element containing the UI for this node.",
                "         * @param [tree.template] {String} Template for this particular node.",
                "         * @protected",
                "         */",
                "        _loadConfig: function (tree) {",
                "            this._tree = {",
                "                children: Y.clone(tree)",
                "            };",
                "            this._initNodes(this._tree);",
                "",
                "        },",
                "        /** Initializes the iNodes configuration with default values and management info.",
                "         * @method _initNodes",
                "         * @param parentINode {Object} Parent of the iNodes to be set",
                "         * @protected",
                "         */",
                "        _initNodes: function (parentINode) {",
                "            var self = this,",
                "                dynLoad = !!self.get(DYNAMIC_LOADER);",
                "            YArray.each(parentINode.children, function (iNode, i) {",
                "                if (Lang.isString(iNode)) {",
                "                    iNode = {label: iNode};",
                "                    parentINode.children[i] = iNode;",
                "                }",
                "                if (!self._focusedINode) {",
                "                    self._focusedINode = iNode;",
                "                }",
                "                iNode._parent = parentINode;",
                "                iNode.id = iNode.id || Y.guid();",
                "                if (dynLoad && !iNode.children) {",
                "                    iNode.expanded = !!iNode.isLeaf;",
                "                } else {",
                "                    iNode.expanded = (iNode.expanded === undefined) || !!iNode.expanded;",
                "                }",
                "                self._initNodes(iNode);",
                "            });",
                "        },",
                "\t\t/**",
                "\t\t * Widget lifecyle method.",
                "         *",
                "         * Gets the HTML markup for the visible nodes and inserts it into the contentbox.",
                "\t\t * @method renderUI",
                "\t\t * @protected",
                "\t\t */",
                "\t\trenderUI: function () {",
                "            var root = this.getRoot();",
                "            root._renderChildren(this.get(CBX));",
                "            root.release();",
                "        },",
                "        /**",
                "         * Initializes the events for its internal use and those requested in",
                "         * the {{#crossLink \"_domEvents\"}}{{/crossLink}} array.",
                "         * @method bindUI",
                "         * @protected",
                "         */",
                "        bindUI: function() {",
                "            var self = this;",
                "",
                "            self._eventHandles.push(self.after('focus', self._afterFocus));",
                "            if (self._domEvents) {",
                "                YArray.each(self._domEvents, function (event) {",
                "                    self._eventHandles.push(self.after(event, self._afterDomEvent, self));",
                "                });",
                "            }",
                "        },",
                "        /**",
                "         * Overrides the native `fire` method so that for DOM events,",
                "         * it will fetch from the pool the fwNode that should have received",
                "         * the event and add it to the event facade as property `node`.",
                "         *",
                "         * @method fire",
                "         * @param type {String|Object} The type of the event, or an object that contains",
                "         * a 'type' property.",
                "         * @param arguments {Object*} an arbitrary set of parameters to pass to",
                "         * the handler. If the first of these is an object literal and the event is",
                "         * configured to emit an event facade, the event facade will replace that",
                "         * parameter after the properties the object literal contains are copied to",
                "         * the event facade.",
                "         * @return {Boolean} false if the event was halted.",
                "         */",
                "        fire: function (type, ev) {",
                "            var ret, self = this;",
                "            if (ev && ev.domEvent) {",
                "                ev.node = self._poolFetchFromEvent(ev);",
                "                ret = FWMgr.superclass.fire.call(self, type, ev);",
                "                self._poolReturn(ev.node);",
                "                return ret;",
                "            }",
                "            return FWMgr.superclass.fire.apply(self, arguments);",
                "        },",
                "        /**",
                "         * Expands all the nodes of the tree.",
                "         *",
                "         * It will only expand existing nodes.  If there is a {{#crossLink \"dynamicLoader:attribute\"}}{{/crossLink}} configured",
                "         * it will not expand those since that might lead to extreme situations.",
                "         * @method expandAll",
                "         * @chainable",
                "         */",
                "        expandAll: function () {",
                "            this._forSomeINode(function(iNode) {",
                "                if (iNode.children && !iNode.expanded) {",
                "                    this._poolReturn(this._poolFetch(iNode).set(EXPANDED, true));",
                "                }",
                "            });",
                "        },",
                "        /**",
                "         * Collapses all the nodes of the tree.",
                "         *",
                "         * @method collapseAll",
                "         * @chainable",
                "         */",
                "        collapseAll: function () {",
                "            this._forSomeINode(function(iNode) {",
                "                if (iNode.children && iNode.expanded) {",
                "                    this._poolReturn(this._poolFetch(iNode).set(EXPANDED, false));",
                "                }",
                "            });",
                "        },",
                "        /**",
                "         * Finds a node by attribute value or by condition.",
                "         * If the first argument is a string, it must be the name of an attribute",
                "         * and the second argument the value sought.",
                "         * If the first argument is a function, it should return true on finding",
                "         * the node sought. The function will receive a node reference.",
                "         * It returns the node sought or null.",
                "         * The node is on hold and it must be released once used.",
                "         * @method getNodeBy",
                "         * @param attr {String or Function} Either an attribute name or a matching function",
                "         * @param value {Any} if the first argument is a string, the second is the value to match",
                "         * @return {FWNode or null} The node found or null",
                "         */",
                "        getNodeBy: function (attr, value) {",
                "            var fn, found = null;",
                "            if (Lang.isFunction(attr)) {",
                "                fn = attr;",
                "            } else if (Lang.isString(attr)) {",
                "                fn = function (node) {",
                "                    return node.get(attr) === value;",
                "                };",
                "            } else {",
                "                return null;",
                "            }",
                "            this.forSomeNodes(function (node) {",
                "                if (fn(node)) {",
                "                    found = node;",
                "                    found.hold();",
                "                    return true;",
                "                }",
                "                return false;",
                "            });",
                "            return found;",
                "        },",
                "",
                "        /** Generic event listener for DOM events listed in the {{#crossLink \"_domEvents\"}}{{/crossLink}} array.",
                "         *  It will locate the iNode represented by the UI elements that received the event,",
                "         *  slide a suitable instance on it and fire the same event on that node.",
                "         *  @method _afterEvent",
                "         *  @param ev {EventFacade} Event facade as produced by the event",
                "         *  @private",
                "         */",
                "        _afterDomEvent: function(ev) {",
                "            var fwNode =  ev.node;",
                "            if (fwNode) {",
                "                fwNode.fire(ev.type.split(':')[1], {domEvent:ev.domEvent});",
                "            }",
                "        },",
                "        /**",
                "         * Returns a string identifying the type of the object to handle the iNode",
                "         * or null if type was not a FlyweightNode instance.",
                "         * @method _getTypeString",
                "         * @param iNode {Object} Internal node in the tree configuration",
                "         * @return {String} type of iNode.",
                "         * @private",
                "         */",
                "        _getTypeString: function (iNode) {",
                "            var type = iNode.type;",
                "            if (!type) {",
                "                return DEFAULT_POOL;",
                "            }",
                "            if (Lang.isString(type)) {",
                "                type = Y[type];",
                "            }",
                "            type = type.NAME;",
                "            if (!type) {",
                "                throw \"Node contains unknown type\";",
                "            }",
                "            return type;",
                "        },",
                "        /**",
                "         * Pulls from the pool an instance of the type declared in the given iNode",
                "         * and slides it over that iNode.",
                "         * If there are no instances of the given type in the pool, a new one will be created via {{#crossLink \"_createNode\"}}{{/crossLink}}",
                "         * If an instance is held (see: {{#crossLink \"FlyweightTreeNode/hold\"}}{{/crossLink}}), it will be returned instead.",
                "         * @method _poolFetch",
                "         * @param iNode {Object} reference to a iNode within the configuration tree",
                "         * @return {FlyweightTreeNode} Usually a subclass of FlyweightTreeNode positioned over the given iNode",
                "         * @protected",
                "         */",
                "        _poolFetch: function(iNode) {",
                "",
                "            var pool,",
                "                fwNode = iNode._nodeInstance,",
                "                type = this._getTypeString(iNode);",
                "",
                "            if (!fwNode) {",
                "                pool = this._pool[type];",
                "                if (pool === undefined) {",
                "                    pool = this._pool[type] = [];",
                "                }",
                "                if (pool.length) {",
                "                    fwNode = pool.pop();",
                "                    fwNode._slideTo(iNode);",
                "                } else {",
                "                    fwNode = this._createNode(iNode);",
                "                }",
                "            }",
                "            iNode._refCount = (iNode._refCount || 0) + 1;",
                "            return fwNode;",
                "        },",
                "        /**",
                "         * Returns the FlyweightTreeNode instance to the pool.",
                "         * Instances held (see: {{#crossLink \"FlyweightTreeNode/hold\"}}{{/crossLink}}) are never returned.",
                "         * @method _poolReturn",
                "         * @param fwNode {FlyweightTreeNode} Instance to return.",
                "         * @protected",
                "         */",
                "        _poolReturn: function (fwNode) {",
                "            var pool,",
                "                iNode = fwNode._iNode,",
                "                type = this._getTypeString(iNode);",
                "",
                "            iNode._refCount -= 1 ;",
                "            if (iNode._refCount) {",
                "                return;",
                "            }",
                "            fwNode._iNode = null;",
                "            iNode._nodeInstance = null;",
                "            pool = this._pool[type];",
                "            if (pool) {",
                "                pool.push(fwNode);",
                "            }",
                "        },",
                "        /**",
                "         * Returns a new instance of the type given in iNode or the",
                "         * {{#crossLink \"defaultType\"}}{{/crossLink}} if none specified",
                "         * and slides it on top of the iNode provided.",
                "         * @method _createNode",
                "         * @param iNode {Object} reference to a iNode within the configuration tree",
                "         * @return {FlyweightTreeNode} Instance of the corresponding subclass of FlyweightTreeNode",
                "         * @protected",
                "         */",
                "        _createNode: function (iNode) {",
                "            var newNode,",
                "                Type = iNode.type || this.get('defaultType');",
                "            if (Lang.isString(Type)) {",
                "                Type = Y[Type];",
                "            }",
                "            if (Type) {",
                "                newNode = new Type({root:this});",
                "                if (newNode instanceof Y.FlyweightTreeNode) {",
                "                    // I need to do this otherwise Attribute will initialize",
                "                    // the real iNode with default values when activating a lazyAdd attribute.",
                "                    newNode._slideTo({});",
                "                    YArray.each(Y.Object.keys(newNode._state.data), newNode._addLazyAttr, newNode);",
                "                    // newNode.getAttrs();",
                "                    // That's it (see above)",
                "                    newNode._root =  this;",
                "                    newNode._slideTo(iNode);",
                "                    return newNode;",
                "                }",
                "            }",
                "            return null;",
                "        },",
                "        /**",
                "         * Returns an instance of Flyweight node positioned over the root.",
                "         * The reference is placed on hold and should be released once used.",
                "         * @method getRoot",
                "         * @return {FlyweightTreeNode}",
                "         */",
                "        getRoot: function () {",
                "            return this._poolFetch(this._tree).hold();",
                "        },",
                "        /**",
                "         * Locates a iNode in the tree by the element that represents it.",
                "         * @method _findINodeByElement",
                "         * @param el {Node} Any element belonging to the tree",
                "         * @return {Object} iNode that produced the markup for that element or null if not found",
                "         * @protected",
                "         */",
                "        _findINodeByElement: function(el) {",
                "            var id = el.ancestor(DOT + FWNode.CNAMES.CNAME_NODE, true).get('id'),",
                "                found = null,",
                "                scan = function (iNode) {",
                "                    if (iNode.id === id) {",
                "                        found = iNode;",
                "                        return true;",
                "                    }",
                "                    if (iNode.children) {",
                "                        return YArray.some(iNode.children, scan);",
                "                    }",
                "                    return false;",
                "                };",
                "            if (scan(this._tree)) {",
                "                return found;",
                "            }",
                "            return null;",
                "        },",
                "        /**",
                "         * Returns a FlyweightTreeNode instance from the pool, positioned over the iNode whose markup generated some event.",
                "         * @method _poolFetchFromEvent",
                "         * @param ev {EventFacade}",
                "         * @return {FlyweightTreeNode} The FlyweightTreeNode instance or null if not found.",
                "         * @private",
                "         */",
                "        _poolFetchFromEvent: function (ev) {",
                "            var found = this._findINodeByElement(ev.domEvent.target);",
                "            if (found) {",
                "                return this._poolFetch(found);",
                "            }",
                "            return null;",
                "        },",
                "        /**",
                "         * Traverses the whole configuration tree, calling a given function for each iNode.",
                "         * If the function returns true, the traversing will terminate.",
                "         * @method _forSomeINode",
                "         * @param fn {Function} Function to call on each configuration iNode",
                "         *\t\t@param fn.iNode {Object} iNode in the configuration tree",
                "         *\t\t@param fn.depth {Integer} depth of this iNode within the tree",
                "         *\t\t@param fn.index {Integer} index of this iNode within the array of its siblings",
                "         * @param scope {Object} scope to run the function in, defaults to `this`.",
                "         * @return true if any of the function calls returned true (the traversal was terminated earlier)",
                "         * @protected",
                "         */",
                "        _forSomeINode: function(fn, scope) {",
                "            scope = scope || this;",
                "            var loop = function(iNode, depth) {",
                "                return YArray.some(iNode.children || [], function(childINode, index) {",
                "                    if (fn.call(scope, childINode,depth, index)) {",
                "                        return true;",
                "                    }",
                "                    return loop(childINode,depth + 1);",
                "                });",
                "            };",
                "            return loop(this._tree, 0);",
                "        },",
                "        /**",
                "         * Executes the given function over all the nodes in the tree or until the function returns true.",
                "         * If dynamic loading is enabled, it will not run over nodes not yet loaded.",
                "         * @method forSomeNodes",
                "         * @param fn {function} function to execute on each node.  It will receive:",
                "         *\t@param fn.node {FlyweightTreeNode} node being visited.",
                "         *\t@param fn.depth {Integer} depth from the root. The root node is level zero and it is not traversed.",
                "         *\t@param fn.index {Integer} position of this node within its branch",
                "         * @param scope {Object} Scope to run the function in.  Defaults to the FlyweightTreeManager instance.",
                "         * @return {Boolean} true if any function calls returned true (the traversal was interrupted)",
                "         */",
                "        forSomeNodes: function (fn, scope) {",
                "            scope = scope || this;",
                "",
                "            var root = this.getRoot(),",
                "                forOneLevel = function (fwNode, depth) {",
                "                    fwNode.forSomeChildren(function (fwNode, index, array) {",
                "                        if (fn.call(scope, fwNode, depth, index, array) === true) {",
                "                            return true;",
                "                        }",
                "                        return forOneLevel(fwNode, depth + 1);",
                "                    });",
                "                },",
                "                ret = forOneLevel(root, 0);",
                "            root.release();",
                "            return ret;",
                "        },",
                "        /**",
                "         * Getter for the {{#crossLink \"focusedNode:attribute\"}}{{/crossLink}} attribute",
                "         * @method _focusedNodeGetter",
                "         * @return {FlyweightNode} Node that would have the focus if the widget is focused",
                "         * @private",
                "         */",
                "        _focusedNodeGetter: function () {",
                "            return this._poolFetch(this._focusedINode).hold();",
                "        },",
                "        /**",
                "         * Setter for the {{#crossLink \"focusedNode:attribute\"}}{{/crossLink}} attribute",
                "         * @method _focusedNodeSetter",
                "         * @param value {FlyweightNode} Node to receive the focus.",
                "         * @return {Object} iNode matching the focused node.",
                "         * @private",
                "         */",
                "        _focusedNodeSetter: function (value) {",
                "            if (!value || value instanceof Y.FlyweightTreeNode) {",
                "                var newINode = (value?value._iNode:this._tree.children[0]);",
                "                this._focusOnINode(newINode);",
                "                return newINode;",
                "            } else {",
                "                return Y.Attribute.INVALID_VALUE;",
                "            }",
                "        },",
                "        /**",
                "         * Sets the focus on the given iNode",
                "         * @method _focusOnINode",
                "         * @param iNode {Object} iNode to receive the focus",
                "         * @private",
                "         */",
                "        _focusOnINode: function (iNode) {",
                "            var prevINode = this._focusedINode,",
                "                el,",
                "                self = this,",
                "                expand = function (iNode) {",
                "                    iNode = iNode._parent;",
                "                    if (iNode && iNode._parent) {",
                "                        expand(iNode);",
                "                        self._poolReturn(self._poolFetch(iNode).set('expanded', true));",
                "                    }",
                "                };",
                "",
                "            if (iNode && iNode !== prevINode) {",
                "",
                "                el = Y.one('#' + prevINode.id + ' .' + FWNode.CNAMES.CNAME_CONTENT);",
                "                el.blur();",
                "                el.set(TABINDEX, -1);",
                "",
                "                expand(iNode);",
                "",
                "                el = Y.one('#' + iNode.id + ' .' + FWNode.CNAMES.CNAME_CONTENT);",
                "                el.focus();",
                "                el.set(TABINDEX,0);",
                "",
                "                self._focusedINode = iNode;",
                "",
                "            }",
                "",
                "        },",
                "        /**",
                "         * Setter for the {{#crossLink \"dynamicLoader:attribute\"}}{{/crossLink}} attribute.",
                "         * It changes the expanded attribute to false on childless iNodes not marked with `isLeaf",
                "         * since they can now be expanded.",
                "         * @method",
                "         * @param value {Function | null } Function to handle the loading of nodes on demand",
                "         * @return {Function | null | INVALID_VALUE} function set or rejection",
                "         * @private",
                "         */",
                "        _dynamicLoaderSetter: function (value) {",
                "            if (!Lang.isFunction(value) &&  value !== null) {",
                "                return Y.Attribute.INVALID_VALUE;",
                "            }",
                "            if (value) {",
                "                this._forSomeINode(function(iNode) {",
                "                    if (!iNode.children) {",
                "                        iNode.expanded = !!iNode.isLeaf;",
                "                    }",
                "                });",
                "            }",
                "            return value;",
                "        }",
                "    },",
                "    {",
                "        ATTRS: {",
                "            /**",
                "             * Default object type of the nodes if no explicit type is given in the configuration tree.",
                "             * It can be specified as an object reference, these two are equivalent: `Y.FWTreeNode` or  `'FWTreeNode'`.",
                "             *",
                "             * @attribute defaultType",
                "             * @type {String | Object}",
                "             * @default 'FlyweightTreeNode'",
                "             */",
                "            defaultType: {",
                "                value: 'FlyweightTreeNode'",
                "            },",
                "            /**",
                "             * Function used to load the nodes dynamically.",
                "             * Function will run in the scope of the FlyweightTreeManager instance and will",
                "             * receive:",
                "             *",
                "             * * node {FlyweightTreeNode} reference to the parent of the children to be loaded.",
                "             * * callback {Function} function to call with the configuration info for the children.",
                "             *",
                "             * The function shall fetch the nodes and create a configuration object",
                "             * much like the one a whole tree might receive.",
                "             * It is not limited to just one level of nodes, it might contain children elements as well.",
                "             * When the data is processed, it should call the callback with the configuration object.",
                "             * The function is responsible of handling any errors.",
                "             * If the the callback is called with no arguments, the parent node will be marked as having no children.",
                "             *",
                "             * This attribute should be set before the tree is rendered as childless nodes",
                "             * render differently when there is a dynamic loader than when there isn't.",
                "             * (childless nodes can be expanded when a dynamic loader is present and the UI should reflect that).",
                "             * @attribute dynamicLoader",
                "             * @type {Function or null}",
                "             * @default null",
                "             */",
                "            dynamicLoader: {",
                "                value: null,",
                "                setter: '_dynamicLoaderSetter'",
                "            },",
                "            /**",
                "             * Points to the node that currently has the focus.",
                "             * If read, the node returned is placed on hold.",
                "             * Please make sure to release the node instance to the pool when done.",
                "             * @attribute focusedNode",
                "             * @type FlyweightTreeNode",
                "             * @default First node in the tree",
                "             */",
                "            focusedNode: {",
                "                getter: '_focusedNodeGetter',",
                "                setter: '_focusedNodeSetter'",
                "                // There is no need for validator since the setter already takes care of validation.",
                "            }",
                "",
                "        }",
                "    });",
                "",
                "",
                "Y.FlyweightTreeManager = FWMgr;",
                "",
                "",
                "/**",
                "* An implementation of the flyweight pattern.  This class should not be instantiated directly.",
                "* Instances of this class can be requested from the flyweight manager class",
                "*",
                "* The FlyweightTreeManager will create instances of this class as required and",
                "* pool them when not in use.",
                "* The instances can be slid on top of the nodes (iNodes, for internal nodes)",
                "* in literal object containing the definition",
                "* of a tree and will take its state from the `iNode` it is slid upon.",
                "* It relies for most of its functionality on the flyweight manager object,",
                "* which contains most of the code.",
                "* @class FlyweightTreeNode",
                "* @extends Base",
                "* @constructor  Do not instantiate directly.",
                "*/",
                "FWNode = Y.Base.create(",
                "\tFWNODE_NAME,",
                "\tY.Base,",
                "\t[],",
                "\t{",
                "\t\t/**",
                "\t\t * Reference to the iNode in the configuration tree it has been slid over.",
                "\t\t * @property _iNode",
                "\t\t * @type {Object}",
                "\t\t * @private",
                "\t\t **/",
                "\t\t_iNode:null,",
                "\t\t/**",
                "\t\t * Reference to the FlyweightTreeManager instance this node belongs to.",
                "\t\t * It is set by the root and should be considered read-only.",
                "\t\t * @property _root",
                "\t\t * @type FlyweightTreeManager",
                "\t\t * @private",
                "\t\t */",
                "\t\t_root: null,",
                "        /**",
                "         * Standard lifecycle method, reads the root node from the config",
                "         * @method initializer",
                "         * @param cfg {object} configuration data",
                "         * @protected",
                "         */",
                "        initializer: function (cfg) {",
                "            this._root = cfg.root;",
                "            this.after('expandedChange', this._afterExpandedChange);",
                "            this.after('labelChange', this._afterLabelChange);",
                "            // This is a patch because the _buildCfg does not work",
                "            this._buildCfgPatch();",
                "        },",
                "        /**",
                "         * Patch to work around the issue with the static _buildCfg property of Base",
                "         * that doesn't quite work.",
                "         * @method _buildCfgPatch",
                "         * @private",
                "         */",
                "        _buildCfgPatch: function () {",
                "            var cnames = {}, it, ot, constr = this.constructor;",
                "            YArray.each(this._classes, function (c) {",
                "                Y.mix(cnames, c.CNAMES);",
                "                it = it || c.INNER_TEMPLATE;",
                "                ot = ot || c.OUTER_TEMPLATE;",
                "            });",
                "            constr.CNAMES = cnames;",
                "            constr.INNER_TEMPLATE = it;",
                "            constr.OUTER_TEMPLATE = ot;",
                "        },",
                "\t\t/**",
                "\t\t * Returns a string with the markup for this node along that of its children",
                "\t\t * produced from its attributes rendered",
                "\t\t * via the first template string it finds in these locations:",
                "\t\t *",
                "\t\t * * It's own {{#crossLink \"template\"}}{{/crossLink}} configuration attribute",
                "\t\t * * The static {{#crossLink \"FlyweightTreeNode/TEMPLATE\"}}{{/crossLink}} class property",
                "\t\t *",
                "\t\t * @method _getHTML",
                "\t\t * @param index {Integer} index of this node within the array of siblings",
                "\t\t * @param nSiblings {Integer} number of siblings including this node",
                "\t\t * @param depth {Integer} number of levels to the root",
                "\t\t * @return {String} markup generated by this node",
                "\t\t * @protected",
                "\t\t */",
                "\t\t_getHTML: function(index, nSiblings, depth) {",
                "\t\t\t// assumes that if you asked for the HTML it is because you are rendering it",
                "\t\t\tvar root = this._root,",
                "                iNode = this._iNode,",
                "\t\t\t\tattrs = this.getAttrs(),",
                "\t\t\t\ts = '',",
                "\t\t\t\tchildCount = iNode.children && iNode.children.length,",
                "                CNAMES = this.constructor.CNAMES,",
                "\t\t\t\tnodeClasses = [CNAMES.CNAME_NODE],",
                "\t\t\t\ttempl,",
                "                it = iNode.inner_template || this.constructor.INNER_TEMPLATE,",
                "                ot = iNode.outer_template || this.constructor.OUTER_TEMPLATE;",
                "",
                "            templ = ot.replace('{INNER_TEMPLATE}', it);",
                "            Y.mix(attrs, CNAMES);",
                "\t\t\tiNode._rendered = true;",
                "\t\t\tif (childCount) {",
                "\t\t\t\tif (attrs.expanded) {",
                "\t\t\t\t\tiNode._childrenRendered = true;",
                "\t\t\t\t\tthis.forSomeChildren( function (fwNode, index, array) {",
                "\t\t\t\t\t\ts += fwNode._getHTML(index, array.length, depth + 1);",
                "\t\t\t\t\t});",
                "\t\t\t\t\tnodeClasses.push(CNAMES.CNAME_EXPANDED);",
                "\t\t\t\t} else {",
                "\t\t\t\t\tnodeClasses.push(CNAMES.CNAME_COLLAPSED);",
                "\t\t\t\t}",
                "\t\t\t} else {",
                "\t\t\t\tif (this._root.get(DYNAMIC_LOADER) && !iNode.isLeaf) {",
                "\t\t\t\t\tnodeClasses.push(CNAMES.CNAME_COLLAPSED);",
                "\t\t\t\t} else {",
                "\t\t\t\t\tnodeClasses.push(CNAMES.CNAME_NOCHILDREN);",
                "\t\t\t\t}",
                "\t\t\t}",
                "\t\t\tif (index === 0) {",
                "\t\t\t\tnodeClasses.push(CNAMES.CNAME_FIRSTCHILD);",
                "\t\t\t}",
                "\t\t\tif (index === nSiblings - 1) {",
                "\t\t\t\tnodeClasses.push(CNAMES.CNAME_LASTCHILD);",
                "\t\t\t}",
                "            if (iNode.type) {",
                "                nodeClasses.push(CNAMES.CNAME_TYPE_PREFIX + root._getTypeString(iNode));",
                "            }",
                "\t\t\tattrs.children = s;",
                "\t\t\tattrs.CNAME_NODE = nodeClasses.join(' ');",
                "            attrs.tabIndex = (iNode === root._focusedINode)?0:-1;",
                "",
                "\t\t\treturn Lang.sub(templ, attrs);",
                "",
                "\t\t},",
                "\t\t/**",
                "\t\t * Method to slide this instance on top of another iNode in the configuration object",
                "\t\t * @method _slideTo",
                "\t\t * @param iNode {Object} iNode in the underlying configuration tree to slide this object on top of.",
                "\t\t * @private",
                "\t\t */",
                "\t\t_slideTo: function (iNode) {",
                "            iNode._nodeInstance = this;",
                "\t\t\tthis._iNode = iNode;",
                "\t\t\tthis._stateProxy = iNode;",
                "\t\t},",
                "        /**",
                "         * Whether this node has children.",
                "         * If there are children, it actually returns the number of children,",
                "         * otherwise it might return 0 or undefined.",
                "         * @method hasChildren",
                "         * @return {Boolean} true if the node has children",
                "         */",
                "        hasChildren: function () {",
                "            var children = this._iNode.children;",
                "            return !!(children && children.length);",
                "        },",
                "\t\t/**",
                "\t\t * Executes the given function on each of the child nodes of this node.",
                "\t\t * @method forSomeChildren",
                "\t\t * @param fn {Function} Function to be executed on each node",
                "\t\t *\t\t@param fn.child {FlyweightTreeNode} Instance of a suitable subclass of FlyweightTreeNode,",
                "\t\t *\t\tpositioned on top of the child node",
                "\t\t *\t\t@param fn.index {Integer} Index of this child within the array of children",
                "\t\t * @param scope {object} The falue of this for the function.  Defaults to the parent.",
                "\t\t**/",
                "\t\tforSomeChildren: function(fn, scope) {",
                "\t\t\tvar root = this._root,",
                "\t\t\t\tchildren = this._iNode.children,",
                "\t\t\t\tchild, ret;",
                "\t\t\tscope = scope || this;",
                "\t\t\tif (children && children.length) {",
                "\t\t\t\tYArray.some(children, function (iNode, index, array) {",
                "\t\t\t\t\tchild = root._poolFetch(iNode);",
                "\t\t\t\t\tret = fn.call(scope, child, index, array);",
                "\t\t\t\t\troot._poolReturn(child);",
                "\t\t\t\t\treturn ret;",
                "\t\t\t\t});",
                "\t\t\t}",
                "\t\t},",
                "\t\t/**",
                "\t\t * Responds to the change in the {{#crossLink \"label:attribute\"}}{{/crossLink}} attribute.",
                "\t\t * @method _afterLabelChange",
                "\t\t * @param ev {EventFacade} standard attribute change event facade",
                "\t\t * @private",
                "\t\t */",
                "        _afterLabelChange: function (ev) {",
                "            var el = Y.one('#' + this._iNode.id + ' .' + FWNode.CNAMES.CNAME_CONTENT);",
                "            if (el) {",
                "                el.setHTML(ev.newVal);",
                "            }",
                "        },",
                "\t\t/**",
                "\t\t * Getter for the expanded configuration attribute.",
                "\t\t * It is meant to be overriden by the developer.",
                "\t\t * The supplied version defaults to true if the expanded property",
                "\t\t * is not set in the underlying configuration tree.",
                "\t\t * It can be overriden to default to false.",
                "\t\t * @method _expandedGetter",
                "\t\t * @return {Boolean} The expanded state of the node.",
                "\t\t * @protected",
                "\t\t */",
                "\t\t_expandedGetter: function () {",
                "\t\t\treturn this._iNode.expanded !== false;",
                "\t\t},",
                "\t\t/**",
                "\t\t * Responds to the change in the {{#crossLink \"expanded:attribute\"}}{{/crossLink}} attribute.",
                "\t\t * It renders the child nodes if this branch has never been expanded.",
                "\t\t * Then sets the className on the node to the static constants",
                "\t\t * CNAME\\_COLLAPSED or CNAME\\_EXPANDED from Y.FlyweightTreeManager",
                "\t\t * @method _afterExpandedChange",
                "\t\t * @param ev {EventFacade} standard attribute change event facade",
                "\t\t * @private",
                "\t\t */",
                "\t\t_afterExpandedChange: function (ev) {",
                "\t\t\tvar value = !!ev.newVal,",
                "                self = this,",
                "\t\t\t\tiNode = self._iNode,",
                "\t\t\t\troot = self._root,",
                "\t\t\t\tel = Y.one('#' + iNode.id),",
                "\t\t\t\tdynLoader = root.get(DYNAMIC_LOADER),",
                "                CEXP = FWNode.CNAMES.CNAME_EXPANDED,",
                "                CCOLL = FWNode.CNAMES.CNAME_COLLAPSED;",
                "",
                "\t\t\tiNode.expanded = value;",
                "\t\t\tif (dynLoader && !iNode.isLeaf && (!iNode.children  || !iNode.children.length)) {",
                "\t\t\t\tthis._loadDynamic();",
                "\t\t\t\treturn;",
                "\t\t\t}",
                "\t\t\tif (el) {",
                "                if (iNode.children && iNode.children.length) {",
                "                    if (value) {",
                "                        if (!iNode._childrenRendered) {",
                "                            self._renderChildren();",
                "                        }",
                "                        el.replaceClass(CCOLL, CEXP);",
                "                    } else {",
                "                        el.replaceClass(CEXP, CCOLL);",
                "                    }",
                "                }",
                "                el.set('aria-expanded', String(value));",
                "            }",
                "\t\t},",
                "\t\t/**",
                "\t\t * Triggers the dynamic loading of children for this node.",
                "\t\t * @method _loadDynamic",
                "\t\t * @private",
                "\t\t */",
                "\t\t_loadDynamic: function () {",
                "\t\t\tvar self = this,",
                "\t\t\t\troot = self._root;",
                "\t\t\tY.one('#' + this.get('id')).replaceClass(FWNode.CNAMES.CNAME_COLLAPSED, FWNode.CNAMES.CNAME_LOADING);",
                "\t\t\troot.get(DYNAMIC_LOADER).call(root, self, Y.bind(self._dynamicLoadReturn, self));",
                "",
                "\t\t},",
                "\t\t/**",
                "\t\t * Callback for the dynamicLoader method.",
                "\t\t * @method _dynamicLoadReturn",
                "\t\t * @param response {Array} array of child iNodes",
                "\t\t * @private",
                "\t\t */",
                "\t\t_dynamicLoadReturn: function (response) {",
                "\t\t\tvar self = this,",
                "\t\t\t\tiNode = self._iNode,",
                "\t\t\t\troot = self._root,",
                "                CNAMES = FWNode.CNAMES;",
                "",
                "\t\t\tif (response) {",
                "",
                "\t\t\t\tiNode.children = response;",
                "\t\t\t\troot._initNodes(iNode);",
                "\t\t\t\tself._renderChildren();",
                "\t\t\t} else {",
                "\t\t\t\tiNode.isLeaf = true;",
                "\t\t\t}",
                "\t\t\t// isLeaf might have been set in the response, not just in the line above.",
                "\t\t\tY.one('#' + iNode.id).replaceClass(CNAMES.CNAME_LOADING, (iNode.isLeaf?CNAMES.CNAME_NOCHILDREN:CNAMES.CNAME_EXPANDED));",
                "\t\t},",
                "\t\t/**",
                "\t\t * Renders the children of this node.",
                "\t\t * It the children had been rendered, they will be replaced.",
                "\t\t * @method _renderChildren",
                "         * @param el {Node} Container to render the children into.",
                "         * Used only for rendering of the root when it will be the contentBox.",
                "\t\t * @private",
                "\t\t */",
                "\t\t_renderChildren: function (el) {",
                "\t\t\tvar s = '',",
                "\t\t\t\tiNode = this._iNode,",
                "                depth = this.get('depth');",
                "\t\t\tiNode._childrenRendered = true;",
                "\t\t\tthis.forSomeChildren(function (fwNode, index, array) {",
                "\t\t\t\ts += fwNode._getHTML(index, array.length, depth + 1);",
                "\t\t\t});",
                "            el = el || Y.one('#' + iNode.id + ' .' + FWNode.CNAMES.CNAME_CHILDREN);",
                "            el.setHTML(s);",
                "\t\t},",
                "\t\t/**",
                "\t\t * Prevents this instance from being returned to the pool and reused.",
                "\t\t * Remember to {{#crossLink \"release\"}}{{/crossLink}} this instance when no longer needed.",
                "\t\t * @method hold",
                "\t\t * @chainable",
                "\t\t */",
                "\t\thold: function () {",
                "            var self = this,",
                "                iNode = self._iNode;",
                "",
                "            iNode._refCount += 1;",
                "\t\t\treturn self;",
                "\t\t},",
                "\t\t/**",
                "\t\t * Allows this instance to be returned to the pool and reused.",
                "\t\t *",
                "\t\t * __Important__: This instance should not be used after being released",
                "\t\t * @method release",
                "\t\t * @chainable",
                "\t\t */",
                "\t\trelease: function () {",
                "            var self = this;",
                "\t\t\tself._root._poolReturn(self);",
                "\t\t\treturn self;",
                "\t\t},",
                "\t\t/**",
                "\t\t * Returns the parent node for this node or null if none exists.",
                "\t\t * The copy is on {{#crossLink \"hold\"}}{{/crossLink}}.",
                "\t\t * Remember to {{#crossLink \"release\"}}{{/crossLink}} the copy to the pool when done.",
                "\t\t * @method getParent",
                "\t\t * @return FlyweightTreeNode",
                "\t\t */",
                "\t\tgetParent: function() {",
                "\t\t\tvar iNode = this._iNode._parent;",
                "\t\t\treturn (iNode?this._root._poolFetch(iNode).hold():null);",
                "\t\t},",
                "\t\t/**",
                "\t\t * Returns the next sibling node for this node or null if none exists.",
                "\t\t * The copy is on {{#crossLink \"hold\"}}{{/crossLink}}.",
                "\t\t * Remember to {{#crossLink \"release\"}}{{/crossLink}} the copy to the pool when done.",
                "\t\t * @method getNextSibling",
                "\t\t * @return FlyweightTreeNode",
                "\t\t */",
                "\t\tgetNextSibling: function() {",
                "\t\t\tvar parent = this._iNode._parent,",
                "\t\t\t\tsiblings = (parent && parent.children) || [],",
                "\t\t\t\tindex = siblings.indexOf(this._iNode) + 1;",
                "\t\t\tif (index === 0 || index >= siblings.length) {",
                "\t\t\t\treturn null;",
                "\t\t\t}",
                "\t\t\treturn this._root._poolFetch(siblings[index]).hold();",
                "\t\t},",
                "\t\t/**",
                "\t\t * Returns the previous sibling node for this node or null if none exists.",
                "\t\t * The copy is on {{#crossLink \"hold\"}}{{/crossLink}}.",
                "\t\t * Remember to {{#crossLink \"release\"}}{{/crossLink}} the copy to the pool when done.",
                "\t\t * @method getPreviousSibling",
                "\t\t * @return FlyweightTreeNode",
                "\t\t */",
                "\t\tgetPreviousSibling: function() {",
                "\t\t\tvar parent = this._iNode._parent,",
                "\t\t\t\tsiblings = (parent && parent.children) || [],",
                "\t\t\t\tindex = siblings.indexOf(this._iNode) - 1;",
                "\t\t\tif (index < 0) {",
                "\t\t\t\treturn null;",
                "\t\t\t}",
                "\t\t\treturn this._root._poolFetch(siblings[index]).hold();",
                "\t\t},",
                "        /**",
                "         * Sets the focus to this node.",
                "         * @method focus",
                "         * @chainable",
                "         */",
                "        focus: function() {",
                "            return this._root.set(FOCUSED, this);",
                "        },",
                "        /**",
                "         * Removes the focus from this node",
                "         * @method blur",
                "         * @chainable",
                "         */",
                "        blur: function () {",
                "            return this._root.set(FOCUSED, null);",
                "        },",
                "\t\t/**",
                "\t\t * Sugar method to toggle the expanded state of the node.",
                "\t\t * @method toggle",
                "\t\t * @chainable",
                "\t\t */",
                "\t\ttoggle: function() {",
                "\t\t\treturn this.set(EXPANDED, !this.get(EXPANDED));",
                "\t\t},",
                "        /**",
                "         * Sugar method to expand a node",
                "         * @method expand",
                "         * @chainable",
                "         */",
                "        expand: function() {",
                "            return this.set(EXPANDED, true);",
                "        },",
                "        /**",
                "         * Sugar method to collapse this node",
                "         * @method collapse",
                "         * @chainable",
                "         */",
                "        collapse: function() {",
                "            return this.set(EXPANDED, false);",
                "        },",
                "\t\t/**",
                "\t\t * Returns true if this node is the root node",
                "\t\t * @method isRoot",
                "\t\t * @return {Boolean} true if root node",
                "\t\t */",
                "\t\tisRoot: function() {",
                "\t\t\treturn this._root._tree === this._iNode;",
                "\t\t},",
                "\t\t/**",
                "\t\t* Gets the stored value for the attribute, from either the",
                "\t\t* internal state object, or the state proxy if it exits",
                "\t\t*",
                "\t\t* @method _getStateVal",
                "\t\t* @private",
                "\t\t* @param {String} name The name of the attribute",
                "\t\t* @return {Any} The stored value of the attribute",
                "\t\t*/",
                "\t\t_getStateVal : function(name) {",
                "\t\t\tvar iNode = this._iNode;",
                "\t\t\tif (this._state.get(name, BYPASS_PROXY) || !iNode) {",
                "\t\t\t\treturn this._state.get(name, VALUE);",
                "\t\t\t}",
                "\t\t\tif (iNode.hasOwnProperty(name)) {",
                "\t\t\t\treturn iNode[name];",
                "\t\t\t}",
                "\t\t\treturn this._state.get(name, VALUE);",
                "\t\t},",
                "",
                "\t\t/**",
                "\t\t* Sets the stored value for the attribute, in either the",
                "\t\t* internal state object, or the state proxy if it exits",
                "\t\t*",
                "\t\t* @method _setStateVal",
                "\t\t* @private",
                "\t\t* @param {String} name The name of the attribute",
                "\t\t* @param {Any} value The value of the attribute",
                "\t\t*/",
                "\t\t_setStateVal : function(name, value) {",
                "\t\t\tvar iNode = this._iNode;",
                "\t\t\tif (this._state.get(name, BYPASS_PROXY) || this._state.get(name, 'initializing') || !iNode) {",
                "\t\t\t\tthis._state.add(name, VALUE, value);",
                "\t\t\t} else {",
                "\t\t\t\tiNode[name] = value;",
                "\t\t\t}",
                "\t\t}",
                "\t},",
                "\t{",
                "\t\t/**",
                "\t\t * Outer template string to be used to render this node.",
                "\t\t * It may be overriden by the subclass.",
                "\t\t *",
                "\t\t * It contains the HTML markup for the wrapper for the node plus placeholders,",
                "\t\t * enclosed in curly braces, that have access to any of the",
                "\t\t * configuration attributes of this node plus several predefined placeholders.",
                "         *",
                "         * It must contain at least three elements identified by their CSS classNames",
                "         * and a special placeholder:",
                "",
                "         +----------------------------+",
                "         | {CNAME_NODE}               |",
                "         | +------------------------+ |",
                "         | | {INNER_TEMPLATE}        | |",
                "         | +------------------------+ |",
                "         |                            |",
                "         | +------------------------+ |",
                "         | | {CNAME_CHILDREN}       | |",
                "         | +------------------------+ |",
                "         +----------------------------+",
                "",
                "         * For example:",
                "",
                "        OUTER_TEMPLATE:'<div id=\"{id}\" class=\"{CNAME_NODE}\" role=\"\" aria-expanded=\"{expanded}\">{INNER_TEMPLATE}' +",
                "                            '<div class=\"{CNAME_CHILDREN}\" role=\"group\">{children}</div></div>',",
                "",
                "         * The outermost container identified by the className `{CNAME_NODE}`",
                "         * must also use the `{id}` placeholder to set the `id` of the node.",
                "         * It should also have the proper ARIA role assigned and the",
                "         * `aria-expanded` set to the `{expanded}` placeholder.",
                "         *",
                "         * It must contain two further elements:",
                "         *",
                "         * * A placeholder for the INNER_TEMPLATE of this node, identified by the placeholder",
                "         *   `{INNER_TEMPLATE}` which should contain everything the user would associate",
                "         *   with this node, such as the label and other status indicators",
                "         *   such as toggle and selection indicators.",
                "         *",
                "         * * The other element is the container for the children of this node.",
                "         *   It will be identified by the className `{CNAME_CHILDREN}` and it",
                "         *   should enclose the placeholder `{children}`.",
                "         *",
                "\t\t * @property OUTER_TEMPLATE",
                "\t\t * @type {String}",
                "\t\t * @default '<div id=\"{id}\" class=\"{CNAME_NODE}\" role=\"\" aria-expanded=\"{expanded}\"><div tabIndex=\"{tabIndex}\"",
                "         class=\"{CNAME_CONTENT}\">{label}</div><div class=\"{CNAME_CHILDREN}\" role=\"group\">{children}</div></div>'",
                "\t\t * @static",
                "\t\t */",
                "        OUTER_TEMPLATE:'<div id=\"{id}\" class=\"{CNAME_NODE}\" role=\"\" aria-expanded=\"{expanded}\">{INNER_TEMPLATE}' +",
                "                            '<div class=\"{CNAME_CHILDREN}\" role=\"group\">{children}</div></div>',",
                "        /**",
                "         * The template for what the user will see of the node.",
                "         * It has been broken appart from the outer template because",
                "         * this is the part that the developer is most likely to modify",
                "         * so that there is no need to repeat the outer envelope over and over again.",
                "         * For example:",
                "         *",
                "            INNER_TEMPLATE:'<div tabIndex=\"{tabIndex}\" class=\"{CNAME_CONTENT}\">{label}</div>',",
                "",
                "         * This element must have at least a palceholder for the `{label}` attribute",
                "         * and any other visual clues to the user.  It must also have the CSS className",
                "         * `{CNAME_CONTENT}` which will be replaced by a suitable name at execution",
                "         * and that will help to locate the contents of this node.",
                "         *",
                "         * This is the element that would receive the focus of the node, thus,",
                "         * it must have a `{tabIndex}` placeholder to receive the appropriate",
                "         * value for the `tabIndex` attribute.",
                "\t\t * @property INNER_TEMPLATE",
                "\t\t * @type {String}",
                "\t\t * @default '<div tabIndex=\"{tabIndex}\" class=\"{CNAME_CONTENT}\">{label}</div>'",
                "\t\t * @static",
                "         */",
                "        INNER_TEMPLATE:'<div tabIndex=\"{tabIndex}\" class=\"{CNAME_CONTENT}\">{label}</div>',",
                "        /**",
                "         * Collection of CSS class names used in the template.",
                "         * It is written all uppercase because its contents are meant to be constants,",
                "         * this object itself being augmented by class names added by its subclasses",
                "         * @attribute CNAMES",
                "         * @type Object",
                "         * @static",
                "         */",
                "        CNAMES: {",
                "            CNAME_NODE: getCName(FWNODE_NAME),",
                "            CNAME_CONTENT: cName('content'),",
                "            CNAME_CHILDREN: cName('children'),",
                "            CNAME_COLLAPSED: cName('collapsed'),",
                "            CNAME_EXPANDED: cName(EXPANDED),",
                "            CNAME_NOCHILDREN: cName('no-children'),",
                "            CNAME_FIRSTCHILD: cName('first-child'),",
                "            CNAME_LASTCHILD: cName('last-child'),",
                "            CNAME_LOADING: cName('loading'),",
                "            CNAME_TYPE_PREFIX: cName('type-')",
                "/*        },",
                "        _buildCfg: {",
                "            // aggregates: ['CNAMES']",
                "",
                " */       },",
                "\t\tATTRS: {",
                "\t\t\t/**",
                "\t\t\t * Reference to the FlyweightTreeManager this node belongs to",
                "\t\t\t * @attribute root",
                "\t\t\t * @type {FlyweightTreeManager}",
                "\t\t\t * @readOnly",
                "\t\t\t *",
                "\t\t\t */",
                "",
                "\t\t\troot: {",
                "\t\t\t\t_bypassProxy: true,",
                "\t\t\t\treadOnly: true,",
                "\t\t\t\tgetter: function() {",
                "\t\t\t\t\treturn this._root;",
                "\t\t\t\t}",
                "\t\t\t},",
                "",
                "\t\t\t/**",
                "\t\t\t * Template to use on this particular instance.",
                "\t\t\t * The renderer will default to the static TEMPLATE property of this class",
                "\t\t\t * (the preferred way) or the nodeTemplate configuration attribute of the root.",
                "\t\t\t * See the TEMPLATE static property.",
                "\t\t\t * @attribute template",
                "\t\t\t * @type {String}",
                "\t\t\t * @default undefined",
                "\t\t\t */",
                "\t\t\ttemplate: {",
                "\t\t\t\tvalidator: Lang.isString",
                "\t\t\t},",
                "\t\t\t/**",
                "\t\t\t * Label for this node. Nodes usually have some textual content, this is the place for it.",
                "\t\t\t * @attribute label",
                "\t\t\t * @type {String}",
                "\t\t\t * @default ''",
                "\t\t\t */",
                "\t\t\tlabel: {",
                "\t\t\t\tsetter:String,",
                "\t\t\t\tvalue: ''",
                "\t\t\t},",
                "\t\t\t/**",
                "\t\t\t * Id to assign to the DOM element that contains this node.",
                "             * Once rendered, it cannot be changed.",
                "\t\t\t * If none was supplied, it will generate one.",
                "\t\t\t * @attribute id",
                "\t\t\t * @type {Identifier}",
                "\t\t\t * @default guid()",
                "\t\t\t */",
                "\t\t\tid: {",
                "\t\t\t\tvalidator: function () {",
                "                    return !this.get('rendered');",
                "                }",
                "\t\t\t},",
                "\t\t\t/**",
                "\t\t\t * Returns the depth of this node from the root.",
                "\t\t\t * This is calculated on-the-fly.",
                "\t\t\t * @attribute depth",
                "\t\t\t * @type Integer",
                "\t\t\t * @readOnly",
                "\t\t\t */",
                "\t\t\tdepth: {",
                "\t\t\t\t_bypassProxy: true,",
                "\t\t\t\treadOnly: true,",
                "\t\t\t\tgetter: function () {",
                "\t\t\t\t\tvar count = 0,",
                "\t\t\t\t\t\tiNode = this._iNode;",
                "\t\t\t\t\twhile (iNode._parent) {",
                "\t\t\t\t\t\tcount += 1;",
                "\t\t\t\t\t\tiNode = iNode._parent;",
                "\t\t\t\t\t}",
                "\t\t\t\t\treturn count-1;",
                "\t\t\t\t}",
                "\t\t\t},",
                "\t\t\t/**",
                "\t\t\t * Expanded state of this node.",
                "\t\t\t * @attribute expanded",
                "\t\t\t * @type Boolean",
                "\t\t\t * @default true",
                "\t\t\t */",
                "\t\t\texpanded: {",
                "\t\t\t\tgetter: '_expandedGetter'",
                "\t\t\t}",
                "\t\t}",
                "\t}",
                ");",
                "Y.FlyweightTreeNode = FWNode;",
                "",
                "",
                "",
                "}, '@VERSION@', {\"requires\": [\"widget\", \"base-build\"], \"skinnable\": false});",
                "",
                "}());"
            ]
        }
    },
    "coverageType": "istanbul"
}
