{"majorversion": 3, "classmap": {"Y.ComplexMath": {"name": "Y.ComplexMath", "namespace": "", "module": "gallery-complexnumber", "methods": {"divide": {"return": {"type": "number", "description": "v1/v2"}, "params": [{"type": "number", "name": "v1", "description": ""}, {"type": "number", "name": "v2", "description": ""}], "guessedname": "divide", "guessedtype": "function"}, "pow": {"return": {"type": "number", "description": "value raised to the exponent"}, "params": [{"type": "number", "name": "v", "description": "  value"}, {"type": "number", "name": "e", "description": "  exponent"}], "guessedname": "pow", "guessedtype": "function"}, "cosh": {"return": {"type": "number", "description": "hyperbolic cosine of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "cosh", "guessedtype": "function"}, "acosh": {"return": {"type": "number", "description": "inverse hyperbolic cosine of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "acosh", "guessedtype": "function"}, "isComplexNumber": {"return": {"type": "boolean", "description": "true if the argument is a ComplexNumber"}, "guessedname": "isComplexNumber", "guessedtype": "function"}, "tan": {"return": {"type": "number", "description": "tangent of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "tan", "guessedtype": "function"}, "log": {"return": {"type": "number", "description": "natural logarithm of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "log", "guessedtype": "function"}, "atanh": {"return": {"type": "number", "description": "inverse hyperbolic tangent of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "atanh", "guessedtype": "function"}, "negative": {"return": {"type": "number", "description": "negative of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "negative", "guessedtype": "function"}, "sqrt": {"return": {"type": "number", "description": "square root of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "sqrt", "guessedtype": "function"}, "add": {"return": {"type": "number", "description": "sum of all the arguments (either passed separately or as an array)"}, "guessedname": "add", "guessedtype": "function"}, "abs": {"return": {"type": "number", "description": "absolute value (magnitude) of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "abs", "guessedtype": "function"}, "sin": {"return": {"type": "number", "description": "sine of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "sin", "guessedtype": "function"}, "asinh": {"return": {"type": "number", "description": "inverse hyperbolic sine of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "asinh", "guessedtype": "function"}, "cos": {"return": {"type": "number", "description": "cosine of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "cos", "guessedtype": "function"}, "sinh": {"return": {"type": "number", "description": "hyperbolic sine of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "sinh", "guessedtype": "function"}, "multiply": {"return": {"type": "number", "description": "product of all the arguments (either passed separately or as an array)"}, "guessedname": "multiply", "guessedtype": "function"}, "subtract": {"return": {"type": "number", "description": "v1-v2"}, "params": [{"type": "number", "name": "v1", "description": ""}, {"type": "number", "name": "v2", "description": ""}], "guessedname": "subtract", "guessedtype": "function"}, "parallel": {"return": {"type": "number", "description": "net value of N impedances in parallel (either passed separately or as an array)"}, "guessedname": "parallel", "guessedtype": "function"}, "addReciprocals": {"return": {"type": "number", "description": "sum of the reciprocals of all the arguments (either passed separately or as an array)"}, "guessedname": "addReciprocals", "guessedtype": "function"}, "tanh": {"return": {"type": "number", "description": "hyperbolic tangent of the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "tanh", "guessedtype": "function"}, "exp": {"return": {"type": "number", "description": "e raised to the argument"}, "params": [{"type": "number", "name": "v", "description": ""}], "guessedname": "exp", "guessedtype": "function"}}, "file": "ComplexMath.js", "shortname": "Y.ComplexMath", "properties": {"I": {"description": "Square root of -1.", "guessedname": "I", "guessedtype": "property"}, "ZERO": {"description": "Zero.", "guessedname": "ZERO", "guessedtype": "property"}}, "description": "<p>This collection of functions provides the complex number equivalent\nof the built-in JavaScript Math namespace, along with the basic\narithmetic operations (since JavaScript does not support operator\noverloading).</p>"}, "Y.ComplexNumber": {"name": "Y.ComplexNumber", "constructors": [{"params": [{"type": "number", "name": "real", "description": "  the real component (default: 0)"}, {"type": "number", "name": "imag", "description": "  the imaginary component (default: 0)"}], "description": "<p>Class for representing a complex number.</p>"}], "namespace": "", "module": "gallery-complexnumber", "methods": {"real": {"return": {"type": "number", "description": "real component"}, "guessedname": "real", "guessedtype": "function"}, "divide": {"chainable": "", "params": [{"type": "number", "name": "v", "description": ""}], "description": "Equivalent of /= operator.", "guessedname": "divide", "guessedtype": "function"}, "imag": {"return": {"type": "number", "description": "imaginary component"}, "guessedname": "imag", "guessedtype": "function"}, "fromPolar": {"return": {"type": "", "description": "ComplexNumber"}, "description": "Construct a ComplexNumber from polar coordinates.", "static": "", "guessedname": "fromPolar", "guessedtype": "function", "params": [{"type": "number", "name": "magnitude", "description": ""}, {"type": "number", "name": "phase", "description": ""}]}, "negate": {"chainable": "", "description": "Equivalent of unary minus operator.", "guessedname": "negate", "guessedtype": "function"}, "multiply": {"chainable": "", "params": [{"type": "number", "name": "v", "description": ""}], "description": "Equivalent of *= operator.", "guessedname": "multiply", "guessedtype": "function"}, "add": {"chainable": "", "params": [{"type": "number", "name": "v", "description": ""}], "description": "Equivalent of += operator.", "guessedname": "add", "guessedtype": "function"}, "magnitude": {"return": {"type": "number", "description": "length of the vector in the complex plane"}, "guessedname": "magnitude", "guessedtype": "function"}, "phase": {"return": {"type": "number", "description": "angle of the vector (in radians) in the complex plane relative to the positive real axis"}, "guessedname": "phase", "guessedtype": "function"}, "subtract": {"chainable": "", "params": [{"type": "number", "name": "v", "description": ""}], "description": "Equivalent of -= operator.", "guessedname": "subtract", "guessedtype": "function"}}, "file": "ComplexNumber.js", "shortname": "Y.ComplexNumber", "description": "<p>Class for representing a complex number.</p>"}}, "version": "1.0.0", "modules": {"gallery-complexnumber": {"description": "<p>Class for representing a complex number.</p>", "submodules": [], "classlist": ["Y.ComplexMath", "Y.ComplexNumber"], "filelist": ["ComplexMath.js", "ComplexNumber.js"], "subdata": {}, "name": "gallery-complexnumber"}}, "filemap": {"ComplexNumber.js": {"classlist": ["Y.ComplexNumber"], "name": "ComplexNumber.js", "module": "gallery-complexnumber"}, "ComplexMath.js": {"classlist": ["Y.ComplexMath"], "name": "ComplexMath.js", "module": "gallery-complexnumber"}}}