{"majorversion": 3, "classmap": {"ExpressionBuilder": {"name": "ExpressionBuilder", "constructors": [{"params": [{"type": "Object", "name": "config", "description": "  Widget configuration"}], "description": "<p>Class which helps user to build a query expression.</p>"}], "namespace": "", "module": "gallery-exprbuilder", "methods": {"clear": {"description": "Clears the expression.", "guessedname": "clear", "guessedtype": "function"}, "_field": {"protected": "", "return": {"type": "String", "description": "markup for the textarea and basic buttons"}, "guessedname": "_field", "guessedtype": "function"}, "_validateExpression": {"protected": "", "return": {"type": "boolean", "description": "<code>true</code> if the expression has balanced parens and single quotes"}, "description": "Validate the expression.", "guessedname": "_validateExpression", "guessedtype": "function"}, "_query": {"protected": "", "return": {"type": "String", "description": "markup for the QueryBuilder form"}, "guessedname": "_query", "guessedtype": "function"}}, "file": "ExpressionBuilder.js", "shortname": "ExpressionBuilder", "configs": {"orLabel": {"description": "The label for the OR button.", "writeonce": "", "default": "\"OR\"", "guessedname": "orLabel", "guessedtype": "property", "type": "{String}"}, "formMgr": {"description": "The FormManager to use when validating the constructed expression.", "writeonce": "", "default": "null", "guessedname": "formMgr", "guessedtype": "property", "type": "{Y.FormManager}"}, "tooManyParensError": {"default": "'The expression contains an extra closing parenthesis at \"{context}\".'", "type": "{String}", "description": "The error message for an unclosed parenthesis. <q>context</q> is\nreplaced by the portion of the expression that generated the error.", "guessedname": "tooManyParensError", "guessedtype": "property"}, "combinatorMap": {"default": "null", "type": "{Object}", "description": "A map of QueryBuilder operators to objects defining\n{operator,pattern}.  This is needed if a variable type generates\nmultiple values, and the values must be combined with something\nother than AND.", "guessedname": "combinatorMap", "guessedtype": "property"}, "notLabel": {"description": "The label for the NOT button.", "writeonce": "", "default": "\"NOT\"", "guessedname": "notLabel", "guessedtype": "property", "type": "{String}"}, "parenLabel": {"description": "The label for the Insert Parentheses button.", "writeonce": "", "default": "\"()\"", "guessedname": "parenLabel", "guessedtype": "property", "type": "{String}"}, "queryBuilder": {"description": "The QueryBuilder to help the user construct the expression.  The\nwidget must not be rendered.  For each variable type, the values of\nthe configured operations must be the pattern to be inserted into\nthe expression. {value} will be replaced by the value entered by the\nuser.", "writeonce": "", "default": "null", "guessedname": "queryBuilder", "guessedtype": "property", "type": "{Y.QueryBuilder}"}, "unclosedParenError": {"default": "'The expression contains an unclosed parenthesis.'", "type": "{String}", "description": "The error message for an unclosed parenthesis.", "guessedname": "unclosedParenError", "guessedtype": "property"}, "unmatchedSingleQuoteError": {"default": "'The expression contains an unmatched single quote.'", "type": "{String}", "description": "The error message for an unmatched single quote.", "guessedname": "unmatchedSingleQuoteError", "guessedtype": "property"}, "resetLabel": {"description": "The label for the Reset button.", "writeonce": "", "default": "\"Reset\"", "guessedname": "resetLabel", "guessedtype": "property", "type": "{String}"}, "andLabel": {"description": "The label for the AND button.", "writeonce": "", "default": "\"AND\"", "guessedname": "andLabel", "guessedtype": "property", "type": "{String}"}, "fieldName": {"description": "The name of the textarea form field.", "writeonce": "", "default": "\"\"", "guessedname": "fieldName", "guessedtype": "property", "type": "{String}"}, "insertLabel": {"description": "The label for the Insert button.", "writeonce": "", "default": "\"Insert\"", "guessedname": "insertLabel", "guessedtype": "property", "type": "{String}"}, "fieldId": {"description": "The id of the textarea form field.", "writeonce": "", "default": "Y.guid()", "guessedname": "fieldId", "guessedtype": "property", "type": "{String}"}, "clearLabel": {"description": "The label for the Clear button.", "writeonce": "", "default": "\"Clear\"", "guessedname": "clearLabel", "guessedtype": "property", "type": "{String}"}}, "description": "<p>Class which helps user to build a query expression.</p>"}}, "version": "1.0.0", "modules": {"gallery-exprbuilder": {"description": "<p>Class which helps user to build a query expression.</p>", "submodules": [], "classlist": ["ExpressionBuilder"], "filelist": ["ExpressionBuilder.js"], "subdata": {}, "name": "gallery-exprbuilder"}}, "filemap": {"ExpressionBuilder.js": {"classlist": ["ExpressionBuilder"], "name": "ExpressionBuilder.js", "module": "gallery-exprbuilder"}}}