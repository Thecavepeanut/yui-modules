{"majorversion": 3, "classmap": {"TreebleDataSource": {"name": "TreebleDataSource", "constructors": [{"params": [{"type": "Object", "name": "config", "description": "  Widget configuration"}], "description": "<p>Hierarchical data source.</p>\n<p>TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  The merged list must be paginated if the number of child\nnodes might be very large.  To turn on this feature, set\npaginateChildren:true.</p>\n<p>The tree must be immutable.  The total number of items available from\neach DataSource must remain constant.</p>"}], "namespace": "", "module": "gallery-treeble", "methods": {"toggle": {"return": {"type": "boolean", "description": "false if the path to the node has not yet been fully explored or is not openable, true otherwise"}, "params": [{"type": "Array", "name": "path", "description": "  Path to the node"}, {"type": "Object} {sort,dir,startIndex,resultCount", "name": "request", "description": ""}, {"type": "Function|Object} Function to call when the operation completes.  Can be object: {fn,scope,args", "name": "completion", "description": ""}], "description": "Toggle the specified node between open and closed.  When a node is\nopened for the first time, this requires a request to the\nDataSource.  Any code that assumes the node has been opened must be\npassed in as a completion function.", "guessedname": "toggle", "guessedtype": "function"}, "Y.Parsers.treebledatasource": {"return": {"type": "DataSource", "description": "The new data source."}, "description": "<p>Converts data to a DataSource.  Data can be an object containing both\n<code>dataType</code> and <code>liveData</code>, or it can be <q>free\nform</q>, e.g., an array of records or an XHR URL.</p>", "static": "", "guessedname": "treebledatasource", "guessedtype": "function", "params": [{"type": "mixed", "name": "oData", "description": "  Data to convert."}]}, "isOpen": {"return": {"type": "boolean", "description": "true if the node is open"}, "params": [{"type": "Array", "name": "path", "description": "  Path to node"}], "guessedname": "isOpen", "guessedtype": "function"}}, "extends": "DataSource.Local", "superclass": "DataSource.Local", "file": "TreebleDataSource.js", "shortname": "TreebleDataSource", "configs": {"uniqueIdKey": {"type": "{String}", "description": "The key in each record that stores an identifier which is unique\nacross the entire tree.  If this is not specified, then all nodes\nwill close when the data is sorted.", "guessedname": "uniqueIdKey", "guessedtype": "property"}, "paginateChildren": {"description": "Pass <code>true</code> to paginate the result after merging child\nnodes into the list.  The default (<code>false</code>) is to\npaginate only root nodes, so all children are visible.", "writeonce": "", "default": "false", "guessedname": "paginateChildren", "guessedtype": "property", "type": "{boolean}"}, "root": {"guessedtype": "property", "type": "{DataSource}", "description": "<p>The root datasource.</p>\n<p>You <em>must</em> directly set a <code>treeble_config</code>\nobject on this datasource.  (You cannot use\n<code>set('treeble_config',...)</code>.) <code>treeble_config</code> can\ncontain the following configuration:</p>\n<dl>\n<dt>generateRequest</dt>\n<dd>(required) The function to convert the initial request into\na request usable by the actual DataSource.  This function takes\ntwo arguments: state (sort,dir,startIndex,resultCount) and path\n(an array of node indices telling how to reach the node).\n</dd>\n<dt>requestCfg</dt>\n<dd>(optional) Configuration object passed as <code>cfg</code> to\n<code>sendRequest</code>.</dd>\n<dt>schemaPluginConfig</dt>\n<dd>(required) Object to pass to <code>plug</code> to install a schema.</dd>\n<dt>cachePluginConfig</dt>\n<dd>(optional) Object to pass to <code>plug</code> to install a cache.</dd>\n<dt>childNodesKey</dt>\n<dd>(semi-optional) The name of the key inside a node which contains\nthe data used to construct the DataSource for retrieving the children.\nThis config is only required if you provide a custom parser.</dd>\n<dt>startIndexExpr</dt>\n<dd>(optional) OGNL expression telling how to extract the startIndex\nfrom the received data, e.g., <code>.meta.startIndex</code>.\nIf it is not provided, startIndex is always assumed to be zero.</dd>\n<dt>totalRecordsExpr</dt>\n<dd>(semi-optional) OGNL expression telling how to extract the total number\nof records from the received data, e.g., <code>.meta.totalRecords</code>.\nIf this is not provided, <code>totalRecordsReturnExpr</code> must be\nspecified.</dd>\n<dt>totalRecordsReturnExpr</dt>\n<dd>(semi-optional) OGNL expression telling where in the response to store\nthe total number of records, e.g., <code>.meta.totalRecords</code>.\nThis is only appropriate for DataSources that always return the\nentire data set.  If this is not provided,\n<code>totalRecordsExpr</code> must be specified.  If both are provided,\n<code>totalRecordsExpr</code> takes priority.</dd>\n</dl>", "guessedname": "root", "writeonce": ""}}, "description": "<p>Hierarchical data source.</p>\n<p>TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  The merged list must be paginated if the number of child\nnodes might be very large.  To turn on this feature, set\npaginateChildren:true.</p>\n<p>The tree must be immutable.  The total number of items available from\neach DataSource must remain constant.</p>"}}, "version": "1.0.0", "modules": {"gallery-treeble": {"description": "<p>Hierarchical data source.</p>\n<p>TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  The merged list must be paginated if the number of child\nnodes might be very large.  To turn on this feature, set\npaginateChildren:true.</p>\n<p>The tree must be immutable.  The total number of items available from\neach DataSource must remain constant.</p>", "submodules": [], "classlist": ["TreebleDataSource"], "filelist": ["TreebleDataSource.js"], "subdata": {}, "name": "gallery-treeble"}}, "filemap": {"TreebleDataSource.js": {"classlist": ["TreebleDataSource"], "name": "TreebleDataSource.js", "module": "gallery-treeble"}}}