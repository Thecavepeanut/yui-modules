{"majorversion": 3, "classmap": {"Accordion": {"name": "Accordion", "constructors": [{"params": [{"type": "Object", "name": "config", "description": "  Widget configuration"}], "description": "<p>Class to manage an accordion, either horizontally or vertically.\nAllows either multiple open sections or only a single open section.\nProvides option to always force at lease one item to be open.</p>\n<p>An accordion can be constructed from existing markup or from strings\ncontaining HTML.  Existing markup can be provided either by setting\n<code>contentBox</code> or by specifying CSS selectors.  See the\n<code>titles</code> and <code>sections</code> attributes.</p>\n<p>When constructing from existing markup via <code>contentBox</code>,\nuse an unordered list (&lt;ul&gt;).  Each item must contain two\n&lt;div&gt;'s.  The first one is used as the section title, and the\nsecond one is used as the section content.</p>\n<p>Animation is optional.  If the anim module is not available,\nanimation is automatically turned off.</p>\n<p>When using a horizontal accordion:</p>\n<ul>\n<li>The widget's container must have a height.</li>\n<li>Each title must have both a width and height.</li>\n<li>Each section must have a width.</li>\n</ul>\n<p>IE doesn't accept zero height divs, so we use 1px height and zero\nopacity.  IE6 doesn't always render correctly with opacity set, so if\nanimation is turned off, we don't use opacity at all.</p>"}], "namespace": "", "module": "gallery-accordion-horiz-vert", "events": {"insert": {"params": [{"type": "int", "name": "index", "description": "  the insertion index"}, {"type": "int", "name": "size", "description": "  the final size of the section title, after animation (if any)"}], "description": "Fires after a section is inserted."}, "beforeInsert": {"params": [{"type": "int", "name": "index", "description": "  the insertion index"}], "description": "Fires before a section is inserted."}, "beforeRemove": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Fires before a section is removed."}, "remove": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Fires after a section is removed."}, "beforeClose": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Fires before a section is closed."}, "beforeOpen": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Fires before a section is opened."}, "close": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Fires after a section is closed.", "guessedname": "open_class", "guessedtype": "property"}, "open": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Fires after a section is opened."}}, "methods": {"allSectionsClosed": {"return": {"type": "boolean", "description": "<code>true</code> if all sections are closed"}, "guessedname": "allSectionsClosed", "guessedtype": "function"}, "findSection": {"return": {"type": "int|null", "description": "the index of the containing section or <code>false</code> if not found"}, "params": [{"type": "String|Node", "name": "any", "description": " element inside the section or title"}], "guessedname": "findSection", "guessedtype": "function"}, "getSection": {"return": {"type": "Node", "description": "the container for the section content"}, "params": [{"type": "int", "name": "index", "description": "  the section index"}], "guessedname": "getSection", "guessedtype": "function"}, "setSection": {"params": [{"type": "int", "name": "index", "description": "  the section index"}, {"type": "String|Node", "name": "content", "description": "  the section content"}], "description": "Sets the contents of the specified section.", "guessedname": "setSection", "guessedtype": "function"}, "appendSection": {"params": [{"type": "String|Node", "name": "title", "description": "  the section title content"}, {"type": "String|Node", "name": "content", "description": "  the section content"}], "description": "Appends the section to the accordion.", "guessedname": "appendSection", "guessedtype": "function"}, "setTitle": {"params": [{"type": "int", "name": "index", "description": "  the section index"}, {"type": "String|Node", "name": "title", "description": "  the title content"}], "description": "Sets the contents of the specified section title.", "guessedname": "setTitle", "guessedtype": "function"}, "prependSection": {"params": [{"type": "String|Node", "name": "title", "description": "  the section title content"}, {"type": "String|Node", "name": "content", "description": "  the section content"}], "description": "Prepends the section to the accordion.", "guessedname": "prependSection", "guessedtype": "function"}, "isSectionOpen": {"return": {"type": "boolean", "description": "<code>true</code> if the section is open"}, "guessedname": "isSectionOpen", "guessedtype": "function"}, "closeSection": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Close the specified section.", "guessedname": "closeSection", "guessedtype": "function"}, "openSection": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Open the specified section.", "guessedname": "openSection", "guessedtype": "function"}, "getSectionCount": {"return": {"type": "int", "description": "total number of sections"}, "guessedname": "getSectionCount", "guessedtype": "function"}, "openAllSections": {"description": "Open all sections, if possible.", "guessedname": "openAllSections", "guessedtype": "function"}, "toggleSection": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Show/hide the section content.", "guessedname": "toggleSection", "guessedtype": "function"}, "getTitle": {"return": {"type": "Node", "description": "the container for the section title"}, "params": [{"type": "int", "name": "index", "description": "  the section index"}], "guessedname": "getTitle", "guessedtype": "function"}, "closeAllSections": {"description": "Close all sections, if possible.", "guessedname": "closeAllSections", "guessedtype": "function"}, "removeSection": {"params": [{"type": "int", "name": "index", "description": "  the section index"}], "description": "Removes the specified section.", "guessedname": "removeSection", "guessedtype": "function"}, "insertSection": {"params": [{"type": "int", "name": "index", "description": "  the insertion index"}, {"type": "String|Node", "name": "title", "description": "  the section title content"}, {"type": "String|Node", "name": "content", "description": "  the section content"}], "description": "Inserts the section into the accordion at the specified location.", "guessedname": "insertSection", "guessedtype": "function"}, "_getClip": {"return": {"type": "Node", "description": "the clipping container for the section content"}, "protected": "", "params": [{"type": "int", "name": "index", "description": "  the section index"}], "guessedname": "_getClip", "guessedtype": "function"}, "allSectionsOpen": {"return": {"type": "boolean", "description": "<code>true</code> if all sections are open"}, "guessedname": "allSectionsOpen", "guessedtype": "function"}}, "file": "Accordion.js", "shortname": "Accordion", "configs": {"allowMultipleOpen": {"default": "false", "type": "{boolean}", "description": "Whether or not to allow multiple sections to be open at the same\ntime.  If not, at most one section at a time will be open.", "guessedname": "allowMultipleOpen", "guessedtype": "property"}, "animateEasing": {"default": "whatever Y.Anim default is", "type": "{function}", "description": "Easing applied to all animations.", "guessedname": "animateEasing", "guessedtype": "property"}, "replaceTitleContainer": {"default": "true", "type": "{boolean}", "description": "Whether or not to replace the default title container node, when the\nsupplied title is a node.  (If the supplied title is markup, it is\nalways inserted inside the default title container.)", "guessedname": "replaceTitleContainer", "guessedtype": "property"}, "titles": {"guessedtype": "property", "type": "{String|Array}", "description": "A CSS selector for locating nodes, an array of nodes, or an array\nof strings containing markup.  This is used to define the initial\nset of section titles.", "guessedname": "titles", "writeonce": ""}, "animateRender": {"default": "false", "type": "{boolean}", "description": "Whether or not to animate the initial rendering of the widget.", "guessedname": "animateRender", "guessedtype": "property"}, "animateDuration": {"default": "whatever Y.Anim default is", "type": "{int}", "description": "Duration of all animations.", "guessedname": "animateDuration", "guessedtype": "property"}, "replaceSectionContainer": {"default": "true", "type": "{boolean}", "description": "Whether or not to replace the default section container node, when\nthe supplied title is a node.  (If the supplied content is markup,\nit is always inserted inside the default section container.)", "guessedname": "replaceSectionContainer", "guessedtype": "property"}, "horizontal": {"description": "Whether or not the accordion is horizontal.", "writeonce": "", "default": "false", "guessedname": "horizontal", "guessedtype": "property", "type": "{boolean}"}, "animateOpenClose": {"default": "true", "type": "{boolean}", "description": "Whether or not to animate opening and closing of sections.", "guessedname": "animateOpenClose", "guessedtype": "property"}, "sections": {"guessedtype": "property", "type": "{String|Array}", "description": "A CSS selector for locating nodes, an array of nodes, or an array\nof strings containing markup.  This is used to define the initial\nset of section contents.", "guessedname": "sections", "writeonce": ""}, "animateInsertRemove": {"default": "true", "type": "{boolean}", "description": "Whether or not to animate insertion and removal of sections.", "guessedname": "animateInsertRemove", "guessedtype": "property"}, "allowAllClosed": {"default": "false", "type": "{boolean}", "description": "Whether or not to allow all sections to be closed at the same time.\nIf not, at least one section will always be open.", "guessedname": "allowAllClosed", "guessedtype": "property"}}, "description": "<p>Class to manage an accordion, either horizontally or vertically.\nAllows either multiple open sections or only a single open section.\nProvides option to always force at lease one item to be open.</p>\n<p>An accordion can be constructed from existing markup or from strings\ncontaining HTML.  Existing markup can be provided either by setting\n<code>contentBox</code> or by specifying CSS selectors.  See the\n<code>titles</code> and <code>sections</code> attributes.</p>\n<p>When constructing from existing markup via <code>contentBox</code>,\nuse an unordered list (&lt;ul&gt;).  Each item must contain two\n&lt;div&gt;'s.  The first one is used as the section title, and the\nsecond one is used as the section content.</p>\n<p>Animation is optional.  If the anim module is not available,\nanimation is automatically turned off.</p>\n<p>When using a horizontal accordion:</p>\n<ul>\n<li>The widget's container must have a height.</li>\n<li>Each title must have both a width and height.</li>\n<li>Each section must have a width.</li>\n</ul>\n<p>IE doesn't accept zero height divs, so we use 1px height and zero\nopacity.  IE6 doesn't always render correctly with opacity set, so if\nanimation is turned off, we don't use opacity at all.</p>"}}, "version": "1.0.0", "modules": {"gallery-accordion-horiz-vert": {"description": "<p>Class to manage an accordion, either horizontally or vertically.\nAllows either multiple open sections or only a single open section.\nProvides option to always force at lease one item to be open.</p>\n<p>An accordion can be constructed from existing markup or from strings\ncontaining HTML.  Existing markup can be provided either by setting\n<code>contentBox</code> or by specifying CSS selectors.  See the\n<code>titles</code> and <code>sections</code> attributes.</p>\n<p>When constructing from existing markup via <code>contentBox</code>,\nuse an unordered list (&lt;ul&gt;).  Each item must contain two\n&lt;div&gt;'s.  The first one is used as the section title, and the\nsecond one is used as the section content.</p>\n<p>Animation is optional.  If the anim module is not available,\nanimation is automatically turned off.</p>\n<p>When using a horizontal accordion:</p>\n<ul>\n<li>The widget's container must have a height.</li>\n<li>Each title must have both a width and height.</li>\n<li>Each section must have a width.</li>\n</ul>\n<p>IE doesn't accept zero height divs, so we use 1px height and zero\nopacity.  IE6 doesn't always render correctly with opacity set, so if\nanimation is turned off, we don't use opacity at all.</p>", "submodules": [], "classlist": ["Accordion"], "filelist": ["Accordion.js"], "subdata": {}, "name": "gallery-accordion-horiz-vert"}}, "filemap": {"Accordion.js": {"classlist": ["Accordion"], "name": "Accordion.js", "module": "gallery-accordion-horiz-vert"}}}