{"majorversion": 3, "classmap": {"AtLeastOneCheckboxGroup": {"name": "AtLeastOneCheckboxGroup", "constructors": [{"params": [{"type": "String|Object|Array", "name": "cb_list", "description": "  The list of checkboxes to manage"}], "description": "At least one checkbox must be selected.  If the last one is turned off,\nthe active, adjacent one is turned on.  The exact algorithm is explained\nin \"Tog on Interface\".  The checkboxes are assumed to be ordered in the\norder they were added."}], "namespace": "", "module": "gallery-checkboxgroups", "file": "AtLeastOneCheckboxGroup.js", "shortname": "AtLeastOneCheckboxGroup", "description": "At least one checkbox must be selected.  If the last one is turned off,\nthe active, adjacent one is turned on.  The exact algorithm is explained\nin \"Tog on Interface\".  The checkboxes are assumed to be ordered in the\norder they were added."}, "AtMostOneCheckboxGroup": {"name": "AtMostOneCheckboxGroup", "constructors": [{"params": [{"type": "String|Object|Array", "name": "cb_list", "description": "  The list of checkboxes to manage"}], "description": "At most one checkbox can be selected.  If one is turned on, the active\none is turned off."}], "namespace": "", "module": "gallery-checkboxgroups", "file": "AtMostOneCheckboxGroup.js", "shortname": "AtMostOneCheckboxGroup", "description": "At most one checkbox can be selected.  If one is turned on, the active\none is turned off."}, "CheckboxGroup": {"name": "CheckboxGroup", "constructors": [{"params": [{"type": "String|Object|Array", "name": "cb_list", "description": "  The list of checkboxes to manage"}], "description": "<p>Base class for enforcing constraints on groups of checkboxes.</p>\n<p>Derived classes must override <code>enforceConstraints()</code>.</p>"}], "namespace": "", "module": "gallery-checkboxgroups", "methods": {"allUnchecked": {"return": {"type": "boolean", "description": "<code>true</code> if all checkboxes are unchecked"}, "guessedname": "allUnchecked", "guessedtype": "function"}, "getCheckboxList": {"return": {"type": "Array", "description": "List of managed checkboxes"}, "guessedname": "getCheckboxList", "guessedtype": "function"}, "allChecked": {"return": {"type": "boolean", "description": "<code>true</code> if all checkboxes are checked"}, "guessedname": "allChecked", "guessedtype": "function"}, "enforceConstraints": {"params": [{"type": "String|Object|Array", "name": "cb_list", "description": "  The list of checkboxes"}, {"type": "Int", "name": "index", "description": "  The index of the checkbox that changed"}], "description": "Derived classes must override this function to implement the desired behavior.", "guessedname": "enforceConstraints", "guessedtype": "function"}, "splice": {"params": [{"type": "Int", "name": "start", "description": "  Insertion index"}, {"type": "Int", "name": "delete_count", "description": "  Number of items to remove, starting from <code>start</code>"}, {"type": "String|Object|Array", "name": "cb_list", "description": "  The list of checkboxes to insert at <code>start</code>"}], "description": "Same functionality as <code>Array.splice()</code>.  Operates on the\nlist of managed checkboxes.", "guessedname": "splice", "guessedtype": "function"}, "allDisabled": {"return": {"type": "boolean", "description": "<code>true</code> if all checkboxes are disabled"}, "guessedname": "allDisabled", "guessedtype": "function"}}, "file": "CheckboxGroup.js", "shortname": "CheckboxGroup", "description": "<p>Base class for enforcing constraints on groups of checkboxes.</p>\n<p>Derived classes must override <code>enforceConstraints()</code>.</p>"}, "SelectAllCheckboxGroup": {"name": "SelectAllCheckboxGroup", "constructors": [{"params": [{"type": "String|Object", "name": "select_all_cb", "description": "  The checkbox that triggers \"select all\""}, {"type": "String|Object|Array", "name": "cb_list", "description": "  The list of checkboxes to manage"}], "description": "All checkboxes can be selected and a select-all checkbox is available\nto check all. This check-all box is automatically changed if any other\ncheckbox changes state."}], "namespace": "", "module": "gallery-checkboxgroups", "file": "SelectAllCheckboxGroup.js", "shortname": "SelectAllCheckboxGroup", "description": "All checkboxes can be selected and a select-all checkbox is available\nto check all. This check-all box is automatically changed if any other\ncheckbox changes state."}}, "version": "1.0.0", "modules": {"gallery-checkboxgroups": {"description": "All checkboxes can be selected and a select-all checkbox is available\nto check all. This check-all box is automatically changed if any other\ncheckbox changes state.", "submodules": [], "classlist": ["AtLeastOneCheckboxGroup", "AtMostOneCheckboxGroup", "CheckboxGroup", "SelectAllCheckboxGroup"], "filelist": ["AtLeastOneCheckboxGroup.js", "AtMostOneCheckboxGroup.js", "CheckboxGroup.js", "SelectAllCheckboxGroup.js"], "subdata": {}, "name": "gallery-checkboxgroups"}}, "filemap": {"SelectAllCheckboxGroup.js": {"classlist": ["SelectAllCheckboxGroup"], "name": "SelectAllCheckboxGroup.js", "module": "gallery-checkboxgroups"}, "AtLeastOneCheckboxGroup.js": {"classlist": ["AtLeastOneCheckboxGroup"], "name": "AtLeastOneCheckboxGroup.js", "module": "gallery-checkboxgroups"}, "AtMostOneCheckboxGroup.js": {"classlist": ["AtMostOneCheckboxGroup"], "name": "AtMostOneCheckboxGroup.js", "module": "gallery-checkboxgroups"}, "CheckboxGroup.js": {"classlist": ["CheckboxGroup"], "name": "CheckboxGroup.js", "module": "gallery-checkboxgroups"}}}